{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/showExamResult/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/showExamResult/Index.vue","mtime":1580739510026},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    return {\n      dataModel: {},\n      loading: false,\n    }\n  },\n  computed: {},\n  mounted() {\n    this.findStudentExams();\n  },\n  methods: {\n    findStudentExams() {\n      let vm = this;\n      let id = vm.$route.params.id;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENT_EXAM_ID + `/${id}`)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.dataModel = response.data.studentExam;\n              console.log(vm.dataModel)\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/Students/showExamResult","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('all_student_exam')}}</span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\" v-if=\"dataModel\">\r\n            <div class=\"vx-col w-full mb-base\" v-if=\"dataModel.textQuestions.length  > 0\">\r\n              <vs-row vs-justify=\"center\" class=\"w-full\">\r\n                <vs-col type=\"flex\" vs-justify=\"centesr\" vs-align=\"center\">\r\n                  <vs-card>\r\n                    <div slot=\"header\">\r\n                      <vs-alert active=\"true\" color=\"danger\">\r\n                        <h3 class=\"text-bold pb-4\">\r\n                          <span class=\"text-info\" style=\"font-size: 18px\">{{dataModel.exam.name}}</span> <br>\r\n                          <hr class=\"mb-4\">\r\n                          {{$ml.get('result_soon')}}\r\n                        </h3>\r\n                      </vs-alert>\r\n                    </div>\r\n                  </vs-card>\r\n                </vs-col>\r\n              </vs-row>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\" v-if=\"dataModel\">\r\n            <div class=\"vx-col w-full mb-base\" v-if=\"dataModel.textQuestions.length  == 0\">\r\n              <h2 class=\"text-bold\">\r\n                {{$ml.get('your_result_p')}} <br><span class=\"text-info\"\r\n                                                       style=\"font-size: 18px\">{{dataModel.exam.name}}</span>\r\n              </h2>\r\n              <div class=\"vx-card bg-primary-gradient p-0 m-0 text-center\" style=\"width: 150px\"><!---->\r\n                <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n                  <div class=\"vx-card__body m-0\">\r\n                    <h3 class=\"text-bold\">\r\n                      {{$ml.get('your_result')}}\r\n                    </h3>\r\n                    <div class=\"vx-row text-center \" style=\"background: #fff\">\r\n                      <div class=\"vx-col w-full text-center\">\r\n                        <h1 class=\"text-bold mt-3\">{{dataModel.degree}} / {{dataModel.exam ? dataModel.exam.degree : 0\r\n                          }}</h1>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {},\r\n        loading: false,\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      this.findStudentExams();\r\n    },\r\n    methods: {\r\n      findStudentExams() {\r\n        let vm = this;\r\n        let id = vm.$route.params.id;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENT_EXAM_ID + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.dataModel = response.data.studentExam;\r\n                console.log(vm.dataModel)\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}