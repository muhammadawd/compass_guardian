{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/ScientificAttachment/All/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/ScientificAttachment/All/Index.vue","mtime":1581494249746},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  data() {\n    return {\n      scientificAttachments: [],\n      selected: [],\n      subjects: [],\n      stages: [],\n      itemsPerPage: 5,\n      current_stage: '',\n      isMounted: false,\n    }\n  },\n  mounted() {\n    this.isMounted = true;\n    this.getAllSubjects()\n    this.getAllStages()\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx\n      }\n      return 0\n    },\n  },\n  methods: {\n    hasAccessPermission(permission) {\n      return window.helper.hasAccessPermission(permission);\n    },\n    getAllStages() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.stages = response.data.stages.data;\n              return\n            }\n            vm.stages = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.stages = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllSubjects() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      let stage_id = vm.current_stage;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_SUBJECTS, {\n          params: {\n            stage_id: stage_id,\n            attachment: true\n          }\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.subjects = response.data.subjects.data;\n              return\n            }\n            vm.subjects = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.subjects = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllScientificAttachment(subject_id) {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      let stage_id = vm.current_stage;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_SCIENTIFIC_ATTACHMENT, {\n          params: {\n            subject_id: subject_id,\n            stage_id: stage_id,\n          }\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.scientificAttachments = response.data.scientificAttachments.data;\n              return\n            }\n            vm.scientificAttachments = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.scientificAttachments = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSelected() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: this.acceptAlert\n      })\n    },\n    acceptAlert() {\n      let vm = this;\n      let ids = vm.selected;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      ids = _.map(ids, 'id');\n      console.log(ids)\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_SCIENTIFIC_ATTACHMENT, {\n          ids: ids\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.scientificAttachments = window.helper.deleteMulti(ids, vm.scientificAttachments)\n              location.reload()\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSingle(id) {\n      let vm = this;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: () => {\n          vm.$root.$children[0].$refs.loader.show_loader = true;\n          try {\n            window.serviceAPI.API().post(window.serviceAPI.DELETE_SCIENTIFIC_ATTACHMENT, {\n              ids: [id]\n            })\n              .then((response) => {\n                vm.$root.$children[0].$refs.loader.show_loader = false;\n                response = response.data;\n                if (response.status) {\n                  vm.scientificAttachments = window.helper.deleteMulti([id], vm.scientificAttachments)\n                  location.reload()\n                }\n              }).catch((error) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              window.helper.handleError(error, vm);\n            });\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      })\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappingsfile":"Index.vue","sourceRoot":"src/views/ScientificAttachment/All","sourcesContent":["<template>\r\n  <div id=\"data-list-thumb-view\" class=\"data-list-container\">\r\n\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col md:w-1/4 mb-base\">\r\n        <vx-card class=\" cursor-pointer\">\r\n          <vs-select v-model=\"current_stage\" :label=\"$ml.get('stage')\" @change=\"getAllSubjects()\">\r\n            <vs-select-item v-for=\"(item ,k) in stages\" :value=\"item.id\" :text=\"item.translated.title\"\r\n                            :key=\"k\"></vs-select-item>\r\n          </vs-select>\r\n          <vs-collapse type=\"margin\">\r\n            <vs-collapse-item v-for=\"(item , key) in subjects\" :key=\"key\">\r\n              <div slot=\"header\">\r\n                {{item.translated.title}}\r\n                <vs-button size=\"small\" class=\"float-left\" color=\"primary\" @click=\"getAllScientificAttachment(item.id)\"\r\n                           :disabled=\"item.scientific_attachments.length == 0\">\r\n                  {{$ml.get('all')}}\r\n                </vs-button>\r\n              </div>\r\n              <vs-list v-if=\"item.scientific_attachments.length == 0\">\r\n                <vs-list-item :title=\"$ml.get('no_data')\"></vs-list-item>\r\n              </vs-list>\r\n              <vs-list v-for=\"(attachment,_key) in item.scientific_attachments\" :key=\"_key\">\r\n                <vs-list-item :title=\"attachment.translated.title\"\r\n                              :subtitle=\"(attachment.teacher ? attachment.teacher.name : '') + ' - ' + (attachment.term ? attachment.term.translated.title : '')\"></vs-list-item>\r\n              </vs-list>\r\n            </vs-collapse-item>\r\n          </vs-collapse>\r\n        </vx-card>\r\n      </div>\r\n      <div class=\"vx-col md:w-3/4 mb-base\">\r\n        <vx-card class=\"text-center cursor-pointer\">\r\n\r\n          <vs-table ref=\"table\" multiple v-model=\"selected\" pagination :max-items=\"itemsPerPage\" search\r\n                    :data=\"scientificAttachments\">\r\n\r\n            <div slot=\"header\" class=\"flex flex-wrap-reverse items-center flex-grow justify-between\">\r\n\r\n              <div class=\"flex flex-wrap-reverse items-center\">\r\n\r\n                <!-- ADD NEW -->\r\n                <vs-button color=\"primary\" class=\"text-bold\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-plus\"\r\n                           v-if=\"hasAccessPermission('create-attachment')\"\r\n                           @click=\"$router.push({name: 'scientific_attachment_add'})\">\r\n                  {{$ml.get('add_new')}}\r\n                </vs-button>\r\n              </div>\r\n\r\n              <!-- ITEMS PER PAGE -->\r\n              <vs-dropdown vs-trigger-click class=\"cursor-pointer mb-4 ml-4\">\r\n                <div dir=\"ltr\"\r\n                     class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n                  <span class=\"mr-2\">{{ currentPage * itemsPerPage - (itemsPerPage - 1) }} - {{ scientificAttachments.length - currentPage * itemsPerPage > 0 ? currentPage * itemsPerPage : scientificAttachments.length }} of {{ scientificAttachments.length }}</span>\r\n                  <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\"/>\r\n                </div>\r\n                <!-- <vs-button class=\"btn-drop\" type=\"line\" color=\"primary\" icon-pack=\"feather\" icon=\"icon-chevron-down\"></vs-button> -->\r\n                <vs-dropdown-menu>\r\n\r\n                  <vs-dropdown-item @click=\"itemsPerPage=5\">\r\n                    <span>5</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=10\">\r\n                    <span>10</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=15\">\r\n                    <span>15</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=20\">\r\n                    <span>20</span>\r\n                  </vs-dropdown-item>\r\n                </vs-dropdown-menu>\r\n              </vs-dropdown>\r\n            </div>\r\n\r\n            <template slot=\"thead\">\r\n              <vs-th>{{$ml.get('title_ar')}}</vs-th>\r\n              <vs-th>{{$ml.get('title_en')}}</vs-th>\r\n              <vs-th>{{$ml.get('teachers')}}</vs-th>\r\n              <vs-th width=\"15%\"></vs-th>\r\n            </template>\r\n\r\n            <template slot-scope=\"{data}\">\r\n              <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td class=\"text-right\">\r\n                  {{tr.title_ar}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  {{tr.title_en}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <slot v-if=\"tr.teacher\">\r\n                    {{tr.teacher.name}}\r\n                  </slot>\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <div class=\"btn-group\" dir=\"ltr\">\r\n                    <vs-button @click=\"deleteSingle(tr.id)\" type=\"line\" v-if=\"hasAccessPermission('delete-attachment')\"\r\n                               color=\"danger\">\r\n                      <i class=\"fa fa-times\"></i>\r\n                    </vs-button>\r\n                    <vs-button @click=\"$router.push({name:'scientific_attachment_edit',params:{id:tr.id}})\" type=\"line\"\r\n                               v-if=\"hasAccessPermission('show-attachment')\"\r\n                               color=\"primary\">\r\n                      <i class=\"fa fa-edit\"></i>\r\n                    </vs-button>\r\n                  </div>\r\n                </vs-td>\r\n              </vs-tr>\r\n            </template>\r\n          </vs-table>\r\n        </vx-card>\r\n        <vs-button @click=\"deleteSelected()\" class=\"mt-4\" v-if=\"hasAccessPermission('delete-attachment')\"\r\n                   :disabled=\"selected.length == 0\">\r\n          {{$ml.get('delete_selected')}}\r\n        </vs-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        scientificAttachments: [],\r\n        selected: [],\r\n        subjects: [],\r\n        stages: [],\r\n        itemsPerPage: 5,\r\n        current_stage: '',\r\n        isMounted: false,\r\n      }\r\n    },\r\n    mounted() {\r\n      this.isMounted = true;\r\n      this.getAllSubjects()\r\n      this.getAllStages()\r\n    },\r\n    computed: {\r\n      currentPage() {\r\n        if (this.isMounted) {\r\n          return this.$refs.table.currentx\r\n        }\r\n        return 0\r\n      },\r\n    },\r\n    methods: {\r\n      hasAccessPermission(permission) {\r\n        return window.helper.hasAccessPermission(permission);\r\n      },\r\n      getAllStages() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.stages = response.data.stages.data;\r\n                return\r\n              }\r\n              vm.stages = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.stages = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllSubjects() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        let stage_id = vm.current_stage;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_SUBJECTS, {\r\n            params: {\r\n              stage_id: stage_id,\r\n              attachment: true\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.subjects = response.data.subjects.data;\r\n                return\r\n              }\r\n              vm.subjects = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.subjects = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllScientificAttachment(subject_id) {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        let stage_id = vm.current_stage;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_SCIENTIFIC_ATTACHMENT, {\r\n            params: {\r\n              subject_id: subject_id,\r\n              stage_id: stage_id,\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.scientificAttachments = response.data.scientificAttachments.data;\r\n                return\r\n              }\r\n              vm.scientificAttachments = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.scientificAttachments = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      deleteSelected() {\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: this.acceptAlert\r\n        })\r\n      },\r\n      acceptAlert() {\r\n        let vm = this;\r\n        let ids = vm.selected;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        ids = _.map(ids, 'id');\r\n        console.log(ids)\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_SCIENTIFIC_ATTACHMENT, {\r\n            ids: ids\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.scientificAttachments = window.helper.deleteMulti(ids, vm.scientificAttachments)\r\n                location.reload()\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      deleteSingle(id) {\r\n        let vm = this;\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: () => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = true;\r\n            try {\r\n              window.serviceAPI.API().post(window.serviceAPI.DELETE_SCIENTIFIC_ATTACHMENT, {\r\n                ids: [id]\r\n              })\r\n                .then((response) => {\r\n                  vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                  response = response.data;\r\n                  if (response.status) {\r\n                    vm.scientificAttachments = window.helper.deleteMulti([id], vm.scientificAttachments)\r\n                    location.reload()\r\n                  }\r\n                }).catch((error) => {\r\n                vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                window.helper.handleError(error, vm);\r\n              });\r\n            } catch (e) {\r\n              console.log(e)\r\n            }\r\n          }\r\n        })\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  #data-list-thumb-view {\r\n    .vs-con-table {\r\n\r\n      .vs-table--header {\r\n        display: flex;\r\n        flex-wrap: wrap-reverse;\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        > span {\r\n          display: flex;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .vs-table--search {\r\n          padding-top: 0;\r\n\r\n          .vs-table--search-input {\r\n            padding: 0.9rem 2.5rem;\r\n            font-size: 1rem;\r\n\r\n            & + i {\r\n              left: 1rem;\r\n            }\r\n\r\n            &:focus + i {\r\n              left: 1rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table {\r\n        border-collapse: separate;\r\n        border-spacing: 0 1.3rem;\r\n        padding: 0 1rem;\r\n\r\n\r\n        tr {\r\n          box-shadow: 0 4px 20px 0 rgba(0, 0, 0, .05);\r\n\r\n          td {\r\n            padding: 10px;\r\n\r\n            &:first-child {\r\n              border-top-left-radius: .5rem;\r\n              border-bottom-left-radius: .5rem;\r\n            }\r\n\r\n            &:last-child {\r\n              border-top-right-radius: .5rem;\r\n              border-bottom-right-radius: .5rem;\r\n            }\r\n\r\n            &.img-container {\r\n              // width: 1rem;\r\n              // background: #fff;\r\n\r\n              span {\r\n                display: flex;\r\n                justify-content: center;\r\n              }\r\n\r\n              .product-img {\r\n                height: 110px;\r\n              }\r\n            }\r\n          }\r\n\r\n          td.td-check {\r\n            padding: 20px !important;\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table--thead {\r\n        th {\r\n          padding-top: 0;\r\n          padding-bottom: 0;\r\n\r\n          .vs-table-text {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n          }\r\n        }\r\n\r\n        th.td-check {\r\n          padding: 0 15px !important;\r\n        }\r\n\r\n        tr {\r\n          background: none;\r\n          box-shadow: none;\r\n        }\r\n      }\r\n\r\n      .vs-table--pagination {\r\n        justify-content: center;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}