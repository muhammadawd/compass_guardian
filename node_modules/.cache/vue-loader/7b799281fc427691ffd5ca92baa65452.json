{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/AllExamsNatega/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/AllExamsNatega/Index.vue","mtime":1581246509445},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  data() {\n    return {\n      mL: ['يناير', 'فبراير', 'مارس', 'ابريل', 'مايو', 'يونية', 'يوليو', 'اغسطس', 'سبتمبر', 'اكتوبر', 'نوفمبر', 'ديسمبر'],\n      monthlyGrouped: [],\n      selected: [],\n      itemsPerPage: 5,\n      isMounted: false,\n      colorx: '#009FFF',\n      colorx2: '#0e4e81'\n    }\n  },\n  mounted() {\n    this.isMounted = true;\n    this.getAllExams()\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx\n      }\n      return 0\n    },\n  },\n  methods: {\n    getClassCard(degree) {\n\n      if (degree == 0) return 'danger-card'\n      if (degree <= 50) return 'warning-card'\n      return 'primary-card'\n    },\n    getAllExams() {\n      let vm = this;\n      // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.GET_STUDENT_EXAM_HOME_DATA, {\n          params: {\n            is_corrected: 'true'\n            // teacher_id: auth_data.user.id\n          }\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.monthlyGrouped = response.data.monthlyGrouped;\n              return\n            }\n            vm.monthlyGrouped = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.monthlyGrouped = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    // getAllExams() {\n    //   let vm = this;\n    //   // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n    //   vm.$root.$children[0].$refs.loader.show_loader = true;\n    //   try {\n    //     window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_EXAM_NATEGA, {\n    //       params: {\n    //         is_corrected: 'true'\n    //         // teacher_id: auth_data.user.id\n    //       }\n    //     })\n    //       .then((response) => {\n    //         vm.$root.$children[0].$refs.loader.show_loader = false;\n    //         response = response.data;\n    //         console.log(response)\n    //         if (response.status) {\n    //           vm.exams = response.data.studentExams.data;\n    //           return\n    //         }\n    //         vm.exams = [];\n    //       }).catch((error) => {\n    //       vm.$root.$children[0].$refs.loader.show_loader = false;\n    //       window.helper.handleError(error, vm);\n    //       vm.exams = [];\n    //     });\n    //   } catch (e) {\n    //     console.log(e)\n    //   }\n    // },\n    deleteSelected() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: this.acceptAlert\n      })\n    },\n    acceptAlert() {\n      let vm = this;\n      let ids = vm.selected;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      ids = _.map(ids, 'id');\n      console.log(ids)\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\n          ids: ids\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.exams = window.helper.deleteMulti(ids, vm.exams)\n              location.reload()\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSingle(id) {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: () => {\n          try {\n            window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\n              ids: [id]\n            })\n              .then((response) => {\n                vm.$root.$children[0].$refs.loader.show_loader = false;\n                response = response.data;\n                if (response.status) {\n                  vm.exams = window.helper.deleteMulti([id], vm.exams)\n                  location.reload()\n                }\n              }).catch((error) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              window.helper.handleError(error, vm);\n            });\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      })\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Index.vue","sourceRoot":"src/views/Students/AllExamsNatega","sourcesContent":["<template>\r\n  <div id=\"data-list-thumb-view\" class=\"data-list-container\">\r\n\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <vx-card class=\"text-right mb-base\" v-for=\"(exams , key) in monthlyGrouped\" :key=\"key\">\r\n          <div class=\"text-right\">\r\n            <div class=\"vx-row\">\r\n              <vs-alert class=\"mb-4\" color=\"danger\" style=\"background: rgb(244, 244, 244);\">\r\n                <h3 class=\"text-bold text-uppercase\">\r\n                  <i class=\"fa fa-calendar\"></i>\r\n                  {{mL[key-1]}}</h3>\r\n              </vs-alert>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n              <div class=\"vx-col md:w-1/5 mb-base\" v-for=\"(exam , key) in exams\" :key=\"key\">\r\n                <div class=\"cardNew\">\r\n                  <div class=\"card-body\"\r\n                       :class=\"getClassCard((parseFloat(exam ? exam.degree : 0) / parseFloat(exam.exam.degree)).toFixed(2) * 100 )\">\r\n                    <div class=\"has-icon\">\r\n                      <feather-icon icon=\"FileTextIcon\" class=\"w-15 h-15\"></feather-icon>\r\n                    </div>\r\n                    <h3 class=\"mt-5 text-bold text-white text-uppercase\">{{exam.exam.subject.translated.title}}</h3>\r\n                    <h5 class=\"mt-5 text-bold text-white text-uppercase\">({{exam.exam.name}})</h5>\r\n                    <div class=\"has-icon bg-transparent mt-3\">\r\n                      <span class=\"feather-icon text-bold\" dir=\"ltr\">\r\n                        {{parseFloat(exam ? exam.degree : 0).toFixed(0)}} / {{parseFloat(exam.exam.degree).toFixed(0)}}\r\n                      </span>\r\n                      <div class=\" mt-2 pt-4\">\r\n                        <a @click=\"$router.push({name:'student_exam_result',params:{'id':exam.id}})\"\r\n                           class=\"text-bold text-white link\">{{$ml.get('show')}}</a>\r\n                      </div>\r\n                      <!--                      <a href=\"\">sdsa</a>-->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"vx-col md:w-1/5 mb-base hidden\">\r\n                <div class=\"cardNew\">\r\n                  <div class=\"card-body primary-card\">\r\n                    sd\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"vx-col md:w-1/5 mb-base hidden\">\r\n                <div class=\"cardNew\">\r\n                  <div class=\"card-body success-card\">\r\n                    sd\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"vx-col md:w-1/5 mb-base hidden\">\r\n                <div class=\"cardNew\">\r\n                  <div class=\"card-body warning-card\">\r\n                    sd\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"vx-col md:w-1/5 mb-base hidden\" v-for=\"(exam , key) in exams\" :key=\"key\"\r\n                   style=\"background: #fff;\">\r\n                <h2 class=\"text-bold\">\r\n                  <span class=\"text-info\" style=\"font-size: 18px\">{{exam.exam.name}}</span>\r\n                </h2>\r\n                <div class=\"vx-card   p-0 m-0 text-center\"\r\n                     style=\"width: 100%;border-radius: 90px 0 90px;background: #cfcfcf\"><!---->\r\n                  <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n                    <div class=\"vx-card__body m-0\">\r\n                      <h4 class=\"text-bold\">\r\n                        {{$ml.get('your_result')}}\r\n                        {{exam.exam.subject.translated.title}}\r\n                      </h4>\r\n                      <div class=\"vx-row text-center \">\r\n                        <div class=\"vx-col w-full text-center\" dir=\"rtl\">\r\n                          <h1 class=\"text-bold mt-3\">{{parseFloat(exam.exam.degree).toFixed(2)}} /\r\n                            {{parseFloat(exam ? exam.degree : 0\r\n                            ).toFixed(2)}}</h1>\r\n                          <vs-button :color=\"colorx\" :gradient-color-secondary=\"colorx2\" type=\"gradient\"\r\n                                     label=\"remove_red_eye\" class=\"mb-2\"\r\n                                     @click=\"$router.push({name:'student_exam_result',params:{'id':exam.id}})\">\r\n                            {{$ml.get('show')}}\r\n                          </vs-button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"vx-col w-full\">\r\n                <vs-divider/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        mL: ['يناير', 'فبراير', 'مارس', 'ابريل', 'مايو', 'يونية', 'يوليو', 'اغسطس', 'سبتمبر', 'اكتوبر', 'نوفمبر', 'ديسمبر'],\r\n        monthlyGrouped: [],\r\n        selected: [],\r\n        itemsPerPage: 5,\r\n        isMounted: false,\r\n        colorx: '#009FFF',\r\n        colorx2: '#0e4e81'\r\n      }\r\n    },\r\n    mounted() {\r\n      this.isMounted = true;\r\n      this.getAllExams()\r\n    },\r\n    computed: {\r\n      currentPage() {\r\n        if (this.isMounted) {\r\n          return this.$refs.table.currentx\r\n        }\r\n        return 0\r\n      },\r\n    },\r\n    methods: {\r\n      getClassCard(degree) {\r\n\r\n        if (degree == 0) return 'danger-card'\r\n        if (degree <= 50) return 'warning-card'\r\n        return 'primary-card'\r\n      },\r\n      getAllExams() {\r\n        let vm = this;\r\n        // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.GET_STUDENT_EXAM_HOME_DATA, {\r\n            params: {\r\n              is_corrected: 'true'\r\n              // teacher_id: auth_data.user.id\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.monthlyGrouped = response.data.monthlyGrouped;\r\n                return\r\n              }\r\n              vm.monthlyGrouped = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.monthlyGrouped = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      // getAllExams() {\r\n      //   let vm = this;\r\n      //   // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n      //   vm.$root.$children[0].$refs.loader.show_loader = true;\r\n      //   try {\r\n      //     window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_EXAM_NATEGA, {\r\n      //       params: {\r\n      //         is_corrected: 'true'\r\n      //         // teacher_id: auth_data.user.id\r\n      //       }\r\n      //     })\r\n      //       .then((response) => {\r\n      //         vm.$root.$children[0].$refs.loader.show_loader = false;\r\n      //         response = response.data;\r\n      //         console.log(response)\r\n      //         if (response.status) {\r\n      //           vm.exams = response.data.studentExams.data;\r\n      //           return\r\n      //         }\r\n      //         vm.exams = [];\r\n      //       }).catch((error) => {\r\n      //       vm.$root.$children[0].$refs.loader.show_loader = false;\r\n      //       window.helper.handleError(error, vm);\r\n      //       vm.exams = [];\r\n      //     });\r\n      //   } catch (e) {\r\n      //     console.log(e)\r\n      //   }\r\n      // },\r\n      deleteSelected() {\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: this.acceptAlert\r\n        })\r\n      },\r\n      acceptAlert() {\r\n        let vm = this;\r\n        let ids = vm.selected;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        ids = _.map(ids, 'id');\r\n        console.log(ids)\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\r\n            ids: ids\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.exams = window.helper.deleteMulti(ids, vm.exams)\r\n                location.reload()\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      deleteSingle(id) {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: () => {\r\n            try {\r\n              window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\r\n                ids: [id]\r\n              })\r\n                .then((response) => {\r\n                  vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                  response = response.data;\r\n                  if (response.status) {\r\n                    vm.exams = window.helper.deleteMulti([id], vm.exams)\r\n                    location.reload()\r\n                  }\r\n                }).catch((error) => {\r\n                vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                window.helper.handleError(error, vm);\r\n              });\r\n            } catch (e) {\r\n              console.log(e)\r\n            }\r\n          }\r\n        })\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  #data-list-thumb-view {\r\n    .vs-con-table {\r\n\r\n      .vs-table--header {\r\n        display: flex;\r\n        flex-wrap: wrap-reverse;\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        > span {\r\n          display: flex;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .vs-table--search {\r\n          padding-top: 0;\r\n\r\n          .vs-table--search-input {\r\n            padding: 0.9rem 2.5rem;\r\n            font-size: 1rem;\r\n\r\n            & + i {\r\n              left: 1rem;\r\n            }\r\n\r\n            &:focus + i {\r\n              left: 1rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table {\r\n        border-collapse: separate;\r\n        border-spacing: 0 1.3rem;\r\n        padding: 0 1rem;\r\n\r\n\r\n        tr {\r\n          box-shadow: 0 4px 20px 0 rgba(0, 0, 0, .05);\r\n\r\n          td {\r\n            padding: 10px;\r\n\r\n            &:first-child {\r\n              border-top-left-radius: .5rem;\r\n              border-bottom-left-radius: .5rem;\r\n            }\r\n\r\n            &:last-child {\r\n              border-top-right-radius: .5rem;\r\n              border-bottom-right-radius: .5rem;\r\n            }\r\n\r\n            &.img-container {\r\n              // width: 1rem;\r\n              // background: #fff;\r\n\r\n              span {\r\n                display: flex;\r\n                justify-content: center;\r\n              }\r\n\r\n              .product-img {\r\n                height: 110px;\r\n              }\r\n            }\r\n          }\r\n\r\n          td.td-check {\r\n            padding: 20px !important;\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table--thead {\r\n        th {\r\n          padding-top: 0;\r\n          padding-bottom: 0;\r\n\r\n          .vs-table-text {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n          }\r\n        }\r\n\r\n        th.td-check {\r\n          padding: 0 15px !important;\r\n        }\r\n\r\n        tr {\r\n          background: none;\r\n          box-shadow: none;\r\n        }\r\n      }\r\n\r\n      .vs-table--pagination {\r\n        justify-content: center;\r\n      }\r\n    }\r\n  }\r\n\r\n  .cardNew {\r\n    box-shadow: 1px 2px 12px #ccc;\r\n    border-radius: 30px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .cardNew .card-body {\r\n    min-height: 320px;\r\n    border-radius: 30px;\r\n    padding-top: 25px;\r\n    text-align: center;\r\n  }\r\n\r\n  .cardNew .card-body .has-icon {\r\n    background: #eee;\r\n    width: 70px;\r\n    height: 70px;\r\n    border-radius: 70px;\r\n    border: 2px dashed #444;\r\n    margin: auto;\r\n  }\r\n\r\n  .cardNew .card-body .has-icon .feather-icon {\r\n\r\n    margin: 22px auto;\r\n    color: #000;\r\n    font-size: 15px;\r\n  }\r\n\r\n  .link {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .cardNew .danger-card {\r\n    background: linear-gradient(to top, rgb(243, 85, 119), rgb(245, 124, 151))\r\n  }\r\n\r\n  .cardNew .primary-card {\r\n    background: linear-gradient(to top, #2196F3, #03A9F4)\r\n  }\r\n\r\n  .cardNew .success-card {\r\n    background: linear-gradient(to top, rgb(35, 188, 198), rgb(105, 204, 143))\r\n  }\r\n\r\n  .cardNew .warning-card {\r\n    background: linear-gradient(to top, rgb(254, 146, 0), rgb(250, 221, 9))\r\n  }\r\n</style>\r\n"]}]}