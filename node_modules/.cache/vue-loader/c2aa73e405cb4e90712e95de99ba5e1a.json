{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/StudentsLeave/Edit/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/StudentsLeave/Edit/Index.vue","mtime":1579788630996},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\n\nexport default {\n  components: {\n    Multiselect, flatPickr\n  },\n  data() {\n    return {\n      dataModel: {},\n      subjects: [],\n      selectedSubjects: [],\n      students: [],\n      selectedStudent: null,\n      teachers: [],\n      selectedTeacher: null,\n      findId: null,\n      loading: false,\n      timeConfig: {\n        enableTime: true,\n        time_24hr: true\n      },\n    }\n  },\n  computed: {},\n  mounted() {\n    this.findId = this.$route.params.id;\n    this.getAllStudents();\n    this.getAllTeachers();\n    this.findStudentLeave();\n  },\n  methods: {\n    findStudentLeave() {\n\n      let vm = this;\n      let id = vm.findId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENT_LEAVES + `/${id}`)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.dataModel = response.data.studentLeave\n              vm.selectedTeacher = response.data.studentLeave.teacher\n              vm.selectedStudent = response.data.studentLeave.student_term.student\n              // vm.selectedStatus = response.data.student.status\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllStudents() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENTS, {\n          params: {\n            student_term: 1\n          }\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.students = response.data.students.data;\n              return\n            }\n            vm.students = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.students = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllTeachers() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_TEACHERS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.teachers = response.data.teachers.data;\n              return\n            }\n            vm.teachers = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.teachers = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    customLabel({name}) {\n      return `${name}`\n    },\n    editLeave() {\n      const vm = this;\n      vm.openLoadingContained();\n      let request_data = vm.dataModel;\n      request_data.student_term_id = vm.selectedStudent ? vm.selectedStudent.student_term.id : null;\n      request_data.teacher_id = vm.selectedTeacher ? vm.selectedTeacher.id : null;\n      $('.span-text-validation').text('');\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.EDIT_STUDENT_LEAVES, request_data)\n          .then((response) => {\n            response = response.data;\n            if (response.status) {\n              window.helper.showMessage('success', vm);\n              vm.$router.push({name: 'student_leave'});\n              return null;\n            }\n            vm.closeLoadingContained()\n          }).catch((error) => {\n          vm.closeLoadingContained()\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Index.vue","sourceRoot":"src/views/StudentsLeave/Edit","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('student_leave')}}</span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('students')}}</label>\r\n              <multiselect v-model=\"selectedStudent\" :options=\"students\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"true\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"student_term_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('teachers')}}</label>\r\n              <multiselect v-model=\"selectedTeacher\" :options=\"teachers\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"true\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"teacher_id_error\"></span>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('start_date')}}</label>\r\n              <flat-pickr class=\"w-full\" :config=\"timeConfig\" :label=\"$ml.get('start_date')\"\r\n                          v-model=\"dataModel.start_date\"></flat-pickr>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"start_date_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('end_date')}}</label>\r\n              <flat-pickr class=\"w-full\" :config=\"timeConfig\" :label=\"$ml.get('end_date')\"\r\n                          v-model=\"dataModel.end_date\"></flat-pickr>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"end_date_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <vs-textarea class=\"w-full\" :label=\"$ml.get('notes')\"\r\n                           v-model=\"dataModel.notes\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"notes_error\"></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"editLeave\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('edit')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect, flatPickr\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {},\r\n        subjects: [],\r\n        selectedSubjects: [],\r\n        students: [],\r\n        selectedStudent: null,\r\n        teachers: [],\r\n        selectedTeacher: null,\r\n        findId: null,\r\n        loading: false,\r\n        timeConfig: {\r\n          enableTime: true,\r\n          time_24hr: true\r\n        },\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      this.findId = this.$route.params.id;\r\n      this.getAllStudents();\r\n      this.getAllTeachers();\r\n      this.findStudentLeave();\r\n    },\r\n    methods: {\r\n      findStudentLeave() {\r\n\r\n        let vm = this;\r\n        let id = vm.findId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENT_LEAVES + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.dataModel = response.data.studentLeave\r\n                vm.selectedTeacher = response.data.studentLeave.teacher\r\n                vm.selectedStudent = response.data.studentLeave.student_term.student\r\n                // vm.selectedStatus = response.data.student.status\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllStudents() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENTS, {\r\n            params: {\r\n              student_term: 1\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.students = response.data.students.data;\r\n                return\r\n              }\r\n              vm.students = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.students = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllTeachers() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_TEACHERS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.teachers = response.data.teachers.data;\r\n                return\r\n              }\r\n              vm.teachers = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.teachers = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      customLabel({name}) {\r\n        return `${name}`\r\n      },\r\n      editLeave() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        request_data.student_term_id = vm.selectedStudent ? vm.selectedStudent.student_term.id : null;\r\n        request_data.teacher_id = vm.selectedTeacher ? vm.selectedTeacher.id : null;\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.EDIT_STUDENT_LEAVES, request_data)\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'student_leave'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}