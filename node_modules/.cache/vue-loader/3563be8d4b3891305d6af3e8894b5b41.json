{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/Edit/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/Edit/Index.vue","mtime":1580893274090},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    return {\n      dataModel: {},\n      status: [],\n      parents: [],\n      stages: [],\n      selectedParent: null,\n      selectedStage: null,\n      selectedStatus: null,\n      findId: null,\n      loading: false\n    }\n  },\n  computed: {},\n  mounted() {\n    this.findId = this.$route.params.id;\n    this.getAllParents()\n    this.getAllStatus()\n    this.getAllStages()\n    this.findStudent()\n  },\n  methods: {\n    customParentLabel({father_name}) {\n      return `${father_name}`\n    },\n    customStageLabel({translated}) {\n      return `${translated.title}`\n    },\n    findStudent() {\n\n      let vm = this;\n      let id = vm.findId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENTS + `/${id}`)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.dataModel = response.data.student\n              vm.selectedParent = response.data.student.parent\n              vm.selectedStage = response.data.student.stage\n              vm.selectedStatus = response.data.student.status\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    handleFileUpload() {\n      let vm = this;\n      vm.dataModel.image = vm.$refs.image.files[0];\n    },\n    editParent() {\n      const vm = this;\n      vm.openLoadingContained();\n      let request_data = vm.dataModel;\n      request_data.parent_id = vm.selectedParent ? vm.selectedParent.id : '';\n      request_data.stage_id = vm.selectedStage ? vm.selectedStage.id : '';\n      request_data.status_id = vm.selectedStatus ? vm.selectedStatus.id : '';\n\n      let form_data = new FormData();\n      $.each(request_data, (key, value) => {\n        if (key != 'class_room_id') form_data.append(key, value == 'null' ? null : value)\n      })\n\n      $('.span-text-validation').text('');\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.EDIT_STUDENTS, form_data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n          .then((response) => {\n            response = response.data;\n            if (response.status) {\n              window.helper.showMessage('success', vm);\n              vm.$router.push({name: 'students'});\n              return null;\n            }\n            vm.closeLoadingContained()\n          }).catch((error) => {\n          vm.closeLoadingContained()\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllStatus() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS + `?types[]=student`)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.status = response.data.status.student;\n              return\n            }\n            vm.status = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.status = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllStages() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.stages = response.data.stages.data;\n              return\n            }\n            vm.stages = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.stages = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllParents() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_PARENTS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.parents = response.data.parents.data;\n              return\n            }\n            vm.parents = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.parents = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/Students/Edit","sourcesContent":["<!-- =========================================================================================\r\n    File Name: KnowledgeBase.vue\r\n    Description: Knowledge Base Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('edit_students')}}</span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('name')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-input class=\"w-full\" v-model=\"dataModel.name\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"name_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('age')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-input class=\"w-full\" v-model=\"dataModel.age\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"age_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('username')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-input class=\"w-full\" v-model=\"dataModel.username\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"username_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('password')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-input class=\"w-full\" type=\"password\" v-model=\"dataModel.password\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"password_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('gender')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-select class=\"w-full\" v-model=\"dataModel.gender\">\r\n                <vs-select-item value=\"male\" :text=\"$ml.get('male')\"></vs-select-item>\r\n                <vs-select-item value=\"female\" :text=\"$ml.get('female')\"></vs-select-item>\r\n              </vs-select>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"gender_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <div class=\"vs-component vs-con-input-label vs-input w-full vs-input-primary\">\r\n                <label class=\"vs-input--label\">{{$ml.get('image')}}</label>\r\n                <div class=\"vs-con-input\">\r\n                  <input type=\"file\" accept=\"image/*\" ref=\"image\" class=\"vs-inputx vs-input--input normal\"\r\n                         v-on:change=\"handleFileUpload()\">\r\n                  <span class=\"span-text-validation text-danger text-bold\" id=\"image_error\"></span>\r\n                </div>\r\n                <a v-if=\"dataModel.image_path\" target=\"_blank\" class=\"text-bold\" :href=\"dataModel.image_path\">{{$ml.get('show_image')}}</a>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('parents')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <multiselect v-model=\"selectedParent\" :options=\"parents\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customParentLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"parent_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('stages')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <multiselect v-model=\"selectedStage\" :options=\"stages\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customStageLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"stage_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('status')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <multiselect v-model=\"selectedStatus\" :options=\"status\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customStageLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"status_id_error\"></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"editParent\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('edit')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {},\r\n        status: [],\r\n        parents: [],\r\n        stages: [],\r\n        selectedParent: null,\r\n        selectedStage: null,\r\n        selectedStatus: null,\r\n        findId: null,\r\n        loading: false\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      this.findId = this.$route.params.id;\r\n      this.getAllParents()\r\n      this.getAllStatus()\r\n      this.getAllStages()\r\n      this.findStudent()\r\n    },\r\n    methods: {\r\n      customParentLabel({father_name}) {\r\n        return `${father_name}`\r\n      },\r\n      customStageLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      findStudent() {\r\n\r\n        let vm = this;\r\n        let id = vm.findId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENTS + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.dataModel = response.data.student\r\n                vm.selectedParent = response.data.student.parent\r\n                vm.selectedStage = response.data.student.stage\r\n                vm.selectedStatus = response.data.student.status\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      handleFileUpload() {\r\n        let vm = this;\r\n        vm.dataModel.image = vm.$refs.image.files[0];\r\n      },\r\n      editParent() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        request_data.parent_id = vm.selectedParent ? vm.selectedParent.id : '';\r\n        request_data.stage_id = vm.selectedStage ? vm.selectedStage.id : '';\r\n        request_data.status_id = vm.selectedStatus ? vm.selectedStatus.id : '';\r\n\r\n        let form_data = new FormData();\r\n        $.each(request_data, (key, value) => {\r\n          if (key != 'class_room_id') form_data.append(key, value == 'null' ? null : value)\r\n        })\r\n\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.EDIT_STUDENTS, form_data, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          })\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'students'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllStatus() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS + `?types[]=student`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.status = response.data.status.student;\r\n                return\r\n              }\r\n              vm.status = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.status = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllStages() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.stages = response.data.stages.data;\r\n                return\r\n              }\r\n              vm.stages = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.stages = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllParents() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_PARENTS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.parents = response.data.parents.data;\r\n                return\r\n              }\r\n              vm.parents = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.parents = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}