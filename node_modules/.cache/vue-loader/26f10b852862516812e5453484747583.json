{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Meals/Menu/Add/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Meals/Menu/Add/Index.vue","mtime":1577799910638},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Multiselect from 'vue-multiselect'\nimport vueMultiSelect from 'vue-multi-select';\nimport 'vue-multi-select/dist/lib/vue-multi-select.css';\n\n\nexport default {\n  data() {\n    return {\n      dataModel: {\n        title_ar: '',\n        title_en: '',\n        description_ar: '',\n        description_en: '',\n        main_image: '',\n        option_values: [],\n        extra_options_ids: [],\n      },\n      categories: [],\n      options: [],\n      loading: false,\n      extraOptions: [],\n      extraOptionsValues: [],\n    }\n  },\n  components: {\n    flatPickr,\n    vueMultiSelect,\n    Multiselect,\n  },\n  computed: {},\n  mounted() {\n    this.getAllCategories()\n    this.getAllOptions()\n    this.getAllExtraOptions()\n  },\n  methods: {\n    customLabel(o) {\n      return `${o.translated.title} ${o.unit ? o.unit.translated.title : ''}`\n    },\n    handleFileUpload() {\n      let vm = this;\n      vm.dataModel.main_image = vm.$refs.image.files[0];\n    },\n    handleFileUploadRow(index) {\n      let vm = this;\n      let images = [];\n      $.each(vm.$refs['myImages_' + index][0].files, function (index, item) {\n        images.push(item)\n      });\n      vm.dataModel.option_values[index].images = images;\n    },\n    removeOption(id) {\n      const vm = this;\n      let data = vm.dataModel.option_values;\n      vm.dataModel.option_values = _.remove(data, (o, i) => {\n        return i == id;\n      });\n      vm.dataModel.option_values = data;\n    },\n    addOption() {\n      const vm = this;\n      vm.dataModel.option_values.push(\n        {\n          price: '',\n          discount: '',\n          expiration_date: '',\n          images: []\n        }\n      );\n    },\n    addMenuItem() {\n      const vm = this;\n      vm.openLoadingContained();\n      let request_data = vm.dataModel;\n      request_data.category_id = vm.dataModel.category ? vm.dataModel.category.id : null;\n      let extra_options_ids = vm.extraOptionsValues ? vm.extraOptionsValues : [];\n      extra_options_ids = _.map(extra_options_ids, 'id');\n      request_data.extra_options_ids = extra_options_ids;\n\n      let form_data = vm.prepareDataToSend(request_data)\n      // return request_data;\n      $('.span-text-validation').text('');\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.ADD_MENU, form_data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n          .then((response) => {\n            response = response.data;\n            if (response.status) {\n              window.helper.showMessage('success', vm);\n              vm.$router.push({name: 'menu_items'});\n              return null;\n            }\n            vm.closeLoadingContained()\n          }).catch((error) => {\n          vm.closeLoadingContained()\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllCategories() {\n      // ALL_CATEGORIES\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_CATEGORIES)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.categories = response.data.categories.data;\n              return\n            }\n            vm.categories = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.categories = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllOptions() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_OPTIONS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.options = response.data.options.data;\n              return\n            }\n            vm.options = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.options = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllExtraOptions() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_EXTRA_OPTIONS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.extraOptions = response.data.extraOptions.data;\n              return\n            }\n            vm.extraOptions = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.extraOptions = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    prepareDataToSend(model) {\n\n      let form_data = new FormData();\n      model.category_id ? form_data.append('category_id', model.category_id) : '';\n      model.title_ar ? form_data.append('title_ar', model.title_ar) : '';\n      model.title_en ? form_data.append('title_en', model.title_en) : '';\n      model.description_ar ? form_data.append('description_ar', model.description_ar) : '';\n      model.description_en ? form_data.append('description_en', model.description_en) : '';\n      model.main_image ? form_data.append('main_image', model.main_image) : '';\n      $.each(model.extra_options_ids, (index, item) => {\n        form_data.append(`extra_options_ids[${index}]`, item);\n      })\n      $.each(model.option_values, (index, item) => {\n        item.price ? form_data.append(`option_values[${index}][price]`, item.price) : '';\n        item.expiration_date ? form_data.append(`option_values[${index}][expiration_date]`, item.expiration_date) : '';\n        item.discount ? form_data.append(`option_values[${index}][discount]`, item.discount) : '';\n        $.each(item.images, (key, value) => {\n          value ? form_data.append(`option_values[${index}][images][${key}]`, value) : '';\n        })\n        $.each(item.option_value_details, (key, value) => {\n          form_data.append(`option_values[${index}][option_value_details][${key}][option_value_id]`, value.id);\n        })\n      })\n      return form_data;\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Index.vue","sourceRoot":"src/views/Meals/Menu/Add","sourcesContent":["<!-- =========================================================================================\r\n    File Name: KnowledgeBase.vue\r\n    Description: Knowledge Base Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('add_menu_item')}}</span>\r\n          </vs-alert>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('category')}}</label>\r\n              <multiselect v-model=\"dataModel.category\" :placeholder=\"$ml.get('choose_category')\" label=\"title\"\r\n                           track-by=\"id\" class=\"multiselect__container\"\r\n                           :options=\"categories\" :option-height=\"104\" :show-labels=\"false\">\r\n                <template slot=\"singleLabel\" slot-scope=\"props\">\r\n                  <img class=\"option__image\" :src=\"props.option.image_path\" alt=\"...\">\r\n                  <span class=\"option__desc\">\r\n                    <span class=\"option__title\">{{ props.option.translated.title }}</span>\r\n                  </span>\r\n                </template>\r\n                <template slot=\"option\" slot-scope=\"props\">\r\n                  <img class=\"option__image\" :src=\"props.option.image_path\" alt=\"...\">\r\n                  <div class=\"option__desc\">\r\n                    <span class=\"option__title\">{{ props.option.translated.title }}</span>\r\n                    <!--                    <div class=\"option__small\">{{ props.option.translated.description }}</div>-->\r\n                  </div>\r\n                </template>\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"category_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-3/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('extra_options')}}</label>\r\n              <multiselect v-model=\"extraOptionsValues\" :options=\"extraOptions\" :multiple=\"true\"\r\n                           :close-on-select=\"false\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('choose')\"\r\n                           label=\"title_ar\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"extra_option_ids_error\"></span>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('title_ar')\" v-model=\"dataModel.title_ar\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"title_ar_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('title_en')\" v-model=\"dataModel.title_en\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"title_en_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <div class=\"vs-component vs-con-input-label vs-input w-full vs-input-primary\">\r\n                <label class=\"vs-input--label\">{{$ml.get('image')}}</label>\r\n                <div class=\"vs-con-input\">\r\n                  <input type=\"file\" accept=\"image/*\" ref=\"image\" class=\"vs-inputx vs-input--input normal\"\r\n                         v-on:change=\"handleFileUpload()\">\r\n                  <span class=\"span-text-validation text-danger text-bold\" id=\"main_image_error\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/2 mb-base\">\r\n              <vs-textarea :label=\"$ml.get('description_ar')\" class=\"w-full\"\r\n                           :label-placeholder=\"$ml.get('description_ar')\" v-model=\"dataModel.description_ar\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"description_ar_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 mb-base\">\r\n              <vs-textarea :label=\"$ml.get('description_en')\" class=\"w-full\"\r\n                           :label-placeholder=\"$ml.get('description_en')\" v-model=\"dataModel.description_en\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"description_en_error\"></span>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <div class=\"text-right\">\r\n                <vs-button type=\"border\" color=\"primary\" @click=\"addOption()\">\r\n                  <i class=\"fa fa-plus\"></i>\r\n                </vs-button>\r\n              </div>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"option_values_error\"></span>\r\n              <vs-table :data=\"dataModel.option_values\">\r\n\r\n                <template slot=\"thead\">\r\n                  <vs-th></vs-th>\r\n                  <vs-th>{{$ml.get('price')}}</vs-th>\r\n                  <vs-th>{{$ml.get('discount')}}</vs-th>\r\n                  <vs-th>{{$ml.get('expiration_date')}}</vs-th>\r\n                  <vs-th>{{$ml.get('images')}}</vs-th>\r\n                  <vs-th width=\"30%\">{{$ml.get('options')}}</vs-th>\r\n                </template>\r\n\r\n                <template slot-scope=\"{data}\">\r\n                  <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td>\r\n                      <vs-button type=\"border\" color=\"danger\" @click=\"removeOption(indextr)\">\r\n                        <i class=\"fa fa-minus\"></i>\r\n                      </vs-button>\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      <vs-input class=\"w-full\" v-model=\"dataModel.option_values[indextr].price\"/>\r\n                      <span class=\"span-text-validation text-danger text-bold\"\r\n                            :id=\"'option_values.'+indextr+'.price_error'\"></span>\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      <vs-input class=\"w-full\" v-model=\"dataModel.option_values[indextr].discount\"/>\r\n                      <span class=\"span-text-validation text-danger text-bold\"\r\n                            :id=\"'option_values.'+indextr+'.discount_error'\"></span>\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      <flat-pickr class=\"w-full vs-inputx vs-input--input normal\"\r\n                                  v-model=\"dataModel.option_values[indextr].expiration_date\"/>\r\n                      <span class=\"span-text-validation text-danger text-bold\"\r\n                            :id=\"'option_values.'+indextr+'.expiration_date_error'\"></span>\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      <input type=\"file\" accept=\"image/*\" :ref=\"'myImages_'+indextr\"\r\n                             class=\"vs-inputx vs-input--input normal\" multiple\r\n                             v-on:change=\"handleFileUploadRow(indextr)\">\r\n                      <span class=\"span-text-validation text-danger text-bold\"\r\n                            :id=\"'option_values.'+indextr+'.images_error'\"></span>\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      <multiselect v-model=\"dataModel.option_values[indextr].option_value_details\" :options=\"options\"\r\n                                   :multiple=\"true\"\r\n                                   group-values=\"option_values\" :customLabel=\"customLabel\" :show-labels=\"false\"\r\n                                   group-label=\"title_ar\" :group-select=\"false\" :placeholder=\"$ml.get('choose')\"\r\n                                   track-by=\"id\" label=\"id\"><span slot=\"noResult\">Oops! No elements found. Consider changing the search query.</span>\r\n                      </multiselect>\r\n\r\n                      <span class=\"span-text-validation text-danger text-bold\"\r\n                            :id=\"'option_values.'+indextr+'.option_value_details_error'\"></span>\r\n                    </vs-td>\r\n                  </vs-tr>\r\n                </template>\r\n              </vs-table>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"addMenuItem\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('add')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n  import Multiselect from 'vue-multiselect'\r\n  import vueMultiSelect from 'vue-multi-select';\r\n  import 'vue-multi-select/dist/lib/vue-multi-select.css';\r\n\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        dataModel: {\r\n          title_ar: '',\r\n          title_en: '',\r\n          description_ar: '',\r\n          description_en: '',\r\n          main_image: '',\r\n          option_values: [],\r\n          extra_options_ids: [],\r\n        },\r\n        categories: [],\r\n        options: [],\r\n        loading: false,\r\n        extraOptions: [],\r\n        extraOptionsValues: [],\r\n      }\r\n    },\r\n    components: {\r\n      flatPickr,\r\n      vueMultiSelect,\r\n      Multiselect,\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      this.getAllCategories()\r\n      this.getAllOptions()\r\n      this.getAllExtraOptions()\r\n    },\r\n    methods: {\r\n      customLabel(o) {\r\n        return `${o.translated.title} ${o.unit ? o.unit.translated.title : ''}`\r\n      },\r\n      handleFileUpload() {\r\n        let vm = this;\r\n        vm.dataModel.main_image = vm.$refs.image.files[0];\r\n      },\r\n      handleFileUploadRow(index) {\r\n        let vm = this;\r\n        let images = [];\r\n        $.each(vm.$refs['myImages_' + index][0].files, function (index, item) {\r\n          images.push(item)\r\n        });\r\n        vm.dataModel.option_values[index].images = images;\r\n      },\r\n      removeOption(id) {\r\n        const vm = this;\r\n        let data = vm.dataModel.option_values;\r\n        vm.dataModel.option_values = _.remove(data, (o, i) => {\r\n          return i == id;\r\n        });\r\n        vm.dataModel.option_values = data;\r\n      },\r\n      addOption() {\r\n        const vm = this;\r\n        vm.dataModel.option_values.push(\r\n          {\r\n            price: '',\r\n            discount: '',\r\n            expiration_date: '',\r\n            images: []\r\n          }\r\n        );\r\n      },\r\n      addMenuItem() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        request_data.category_id = vm.dataModel.category ? vm.dataModel.category.id : null;\r\n        let extra_options_ids = vm.extraOptionsValues ? vm.extraOptionsValues : [];\r\n        extra_options_ids = _.map(extra_options_ids, 'id');\r\n        request_data.extra_options_ids = extra_options_ids;\r\n\r\n        let form_data = vm.prepareDataToSend(request_data)\r\n        // return request_data;\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.ADD_MENU, form_data, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          })\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'menu_items'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllCategories() {\r\n        // ALL_CATEGORIES\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_CATEGORIES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.categories = response.data.categories.data;\r\n                return\r\n              }\r\n              vm.categories = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.categories = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllOptions() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_OPTIONS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.options = response.data.options.data;\r\n                return\r\n              }\r\n              vm.options = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.options = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllExtraOptions() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_EXTRA_OPTIONS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.extraOptions = response.data.extraOptions.data;\r\n                return\r\n              }\r\n              vm.extraOptions = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.extraOptions = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      prepareDataToSend(model) {\r\n\r\n        let form_data = new FormData();\r\n        model.category_id ? form_data.append('category_id', model.category_id) : '';\r\n        model.title_ar ? form_data.append('title_ar', model.title_ar) : '';\r\n        model.title_en ? form_data.append('title_en', model.title_en) : '';\r\n        model.description_ar ? form_data.append('description_ar', model.description_ar) : '';\r\n        model.description_en ? form_data.append('description_en', model.description_en) : '';\r\n        model.main_image ? form_data.append('main_image', model.main_image) : '';\r\n        $.each(model.extra_options_ids, (index, item) => {\r\n          form_data.append(`extra_options_ids[${index}]`, item);\r\n        })\r\n        $.each(model.option_values, (index, item) => {\r\n          item.price ? form_data.append(`option_values[${index}][price]`, item.price) : '';\r\n          item.expiration_date ? form_data.append(`option_values[${index}][expiration_date]`, item.expiration_date) : '';\r\n          item.discount ? form_data.append(`option_values[${index}][discount]`, item.discount) : '';\r\n          $.each(item.images, (key, value) => {\r\n            value ? form_data.append(`option_values[${index}][images][${key}]`, value) : '';\r\n          })\r\n          $.each(item.option_value_details, (key, value) => {\r\n            form_data.append(`option_values[${index}][option_value_details][${key}][option_value_id]`, value.id);\r\n          })\r\n        })\r\n        return form_data;\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\r\n<style lang=\"scss\">\r\n  .option__image {\r\n    width: 150px;\r\n  }\r\n\r\n  .multiselect__container {\r\n    z-index: 999 !important;\r\n  }\r\n\r\n  [dir=rtl] .multiselect__container {\r\n    z-index: 999999 !important;\r\n  }\r\n\r\n  .option__desc, .option__image {\r\n    display: inline-block !important;\r\n    vertical-align: middle !important;\r\n    font-weight: bold !important;\r\n  }\r\n\r\n  .option__image {\r\n    max-height: 80px;\r\n    /*margin-right: 10px;*/\r\n    margin-left: 10px;\r\n  }\r\n\r\n  .option__small {\r\n    display: block !important;\r\n    font-size: 12px !important;\r\n  }\r\n</style>\r\n"]}]}