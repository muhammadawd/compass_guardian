{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Reports/StudentLeavesReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Reports/StudentLeavesReport.vue","mtime":1581339440355},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\n\nexport default {\n  components: {\n    flatPickr\n  },\n  data() {\n    return {\n      status: [],\n      student_leaves: [],\n      selected: [],\n      itemsPerPage: 5,\n      isMounted: false,\n      filterModel: {}\n    }\n  },\n  mounted() {\n    this.isMounted = true;\n    this.getAllStatus()\n    this.getAllStudnetLeaves()\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx\n      }\n      return 0\n    },\n  },\n  methods: {\n    hasAccessPermission(permission) {\n      return window.helper.hasAccessPermission(permission);\n    },\n    getAllStatus() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.status = response.data.status.teacher_leave;\n              return\n            }\n            vm.status = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.status = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getStatusClass(status) {\n      if (status == 'accepted') {\n\n        return 'vs-chip-success';\n      } else if (status == 'rejected') {\n\n        return 'vs-chip-danger';\n      } else {\n\n        return 'vs-chip-warning';\n      }\n    },\n    getAllStudnetLeaves() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_LEAVES)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.student_leaves = response.data.studentLeaves.data;\n              _.transform(response.data.studentLeaves.data, function (result, value, key) {\n                // console.log(result, value, key);\n                value.teacher_name = value.teacher ? value.teacher.name : '';\n                value.student_name = value.student_term ? value.student_term.student.name : '';\n                result[key] = value;\n              }, {});\n              return\n            }\n            vm.student_leaves = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.student_leaves = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSelected() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: this.acceptAlert\n      })\n    },\n    acceptAlert() {\n      let vm = this;\n      let ids = vm.selected;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      ids = _.map(ids, 'id');\n      console.log(ids)\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n          ids: ids\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.student_leaves = window.helper.deleteMulti(ids, vm.student_leaves)\n              location.reload()\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSingle(id) {\n      let vm = this;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: () => {\n          vm.$root.$children[0].$refs.loader.show_loader = true;\n          try {\n            window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n              ids: [id]\n            })\n              .then((response) => {\n                vm.$root.$children[0].$refs.loader.show_loader = false;\n                response = response.data;\n                if (response.status) {\n                  vm.student_leaves = window.helper.deleteMulti([id], vm.student_leaves)\n                  location.reload()\n                }\n              }).catch((error) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              window.helper.handleError(error, vm);\n            });\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      })\n    },\n  },\n}\n",{"version":3,"sources":["StudentLeavesReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"StudentLeavesReport.vue","sourceRoot":"src/views/Reports","sourcesContent":["<template>\n  <div>\n    <div class=\"vx-row\">\n      <div class=\"vx-col w-full\">\n        <div class=\"vx-row  text-right\">\n          <div class=\"vx-col w-full mb-base btn-group d-print-none\" dir=\"ltr\">\n<!--            <vs-button @click=\"getAllStudnetLeaves()\">-->\n<!--              <i class=\"fa fa-search\"></i>-->\n<!--            </vs-button>-->\n            <vs-button color=\"warning\" onclick=\"window.print()\">\n              <i class=\"fa fa-print\"></i>\n            </vs-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"container-fluid mt--7\">\n      <div class=\"row \">\n        <div class=\"col\">\n          <div class=\"card shadow border-0\">\n            <div class=\"map-canvas\"\n                 style=\"min-height: 600px;\">\n              <div class=\"table-responsive\">\n                <vs-table stripe :data=\"student_leaves\">\n                  <template slot=\"header\">\n                    <h3>\n\n                    </h3>\n                  </template>\n                  <template slot=\"thead\">\n                    <vs-th width=\"220px\">\n                      {{$ml.get('students')}}\n                    </vs-th>\n                    <vs-th>{{$ml.get('teachers')}}</vs-th>\n                    <vs-th>{{$ml.get('type')}}</vs-th>\n                    <vs-th>{{$ml.get('date')}}</vs-th>\n                    <vs-th>{{$ml.get('notes')}}</vs-th>\n                  </template>\n\n                  <template slot-scope=\"{data}\">\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\n                      <vs-td class=\"text-right\">\n                        <slot v-if=\"tr.student_term\">\n                          {{tr.student_term.student.name}}\n                        </slot>\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        <slot v-if=\"tr.teacher\">\n                          {{tr.teacher.name}}\n                        </slot>\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        <div class=\"con-vs-chip ml-auto  con-color\"\n                             :class=\"tr.type == 'vacation' ? 'vs-chip-success':'vs-chip-danger'\"\n                             style=\"color: rgba(255, 255, 255, 0.9);\">\n                          <span class=\"text-chip vs-chip--text\">{{$ml.get(tr.type)}}</span>\n                        </div>\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        {{tr.date}}\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        {{tr.notes}}\n                      </vs-td>\n                    </vs-tr>\n                  </template>\n                </vs-table>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  import flatPickr from 'vue-flatpickr-component';\n  import 'flatpickr/dist/flatpickr.css';\n\n  export default {\n    components: {\n      flatPickr\n    },\n    data() {\n      return {\n        status: [],\n        student_leaves: [],\n        selected: [],\n        itemsPerPage: 5,\n        isMounted: false,\n        filterModel: {}\n      }\n    },\n    mounted() {\n      this.isMounted = true;\n      this.getAllStatus()\n      this.getAllStudnetLeaves()\n    },\n    computed: {\n      currentPage() {\n        if (this.isMounted) {\n          return this.$refs.table.currentx\n        }\n        return 0\n      },\n    },\n    methods: {\n      hasAccessPermission(permission) {\n        return window.helper.hasAccessPermission(permission);\n      },\n      getAllStatus() {\n        let vm = this;\n        vm.$root.$children[0].$refs.loader.show_loader = true;\n        try {\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS)\n            .then((response) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n              console.log(response)\n              if (response.status) {\n                vm.status = response.data.status.teacher_leave;\n                return\n              }\n              vm.status = [];\n            }).catch((error) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            window.helper.handleError(error, vm);\n            vm.status = [];\n          });\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      getStatusClass(status) {\n        if (status == 'accepted') {\n\n          return 'vs-chip-success';\n        } else if (status == 'rejected') {\n\n          return 'vs-chip-danger';\n        } else {\n\n          return 'vs-chip-warning';\n        }\n      },\n      getAllStudnetLeaves() {\n        let vm = this;\n        vm.$root.$children[0].$refs.loader.show_loader = true;\n        try {\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_LEAVES)\n            .then((response) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n              if (response.status) {\n                vm.student_leaves = response.data.studentLeaves.data;\n                _.transform(response.data.studentLeaves.data, function (result, value, key) {\n                  // console.log(result, value, key);\n                  value.teacher_name = value.teacher ? value.teacher.name : '';\n                  value.student_name = value.student_term ? value.student_term.student.name : '';\n                  result[key] = value;\n                }, {});\n                return\n              }\n              vm.student_leaves = [];\n            }).catch((error) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            window.helper.handleError(error, vm);\n            vm.student_leaves = [];\n          });\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      deleteSelected() {\n        this.$vs.dialog({\n          type: 'confirm',\n          color: 'danger',\n          title: this.$ml.get('confirm'),\n          text: this.$ml.get('are_sure'),\n          acceptText: this.$ml.get('yes'),\n          cancelText: this.$ml.get('no'),\n          accept: this.acceptAlert\n        })\n      },\n      acceptAlert() {\n        let vm = this;\n        let ids = vm.selected;\n        vm.$root.$children[0].$refs.loader.show_loader = true;\n        ids = _.map(ids, 'id');\n        console.log(ids)\n        try {\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n            ids: ids\n          })\n            .then((response) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n              if (response.status) {\n                vm.student_leaves = window.helper.deleteMulti(ids, vm.student_leaves)\n                location.reload()\n              }\n            }).catch((error) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            window.helper.handleError(error, vm);\n          });\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      deleteSingle(id) {\n        let vm = this;\n        this.$vs.dialog({\n          type: 'confirm',\n          color: 'danger',\n          title: this.$ml.get('confirm'),\n          text: this.$ml.get('are_sure'),\n          acceptText: this.$ml.get('yes'),\n          cancelText: this.$ml.get('no'),\n          accept: () => {\n            vm.$root.$children[0].$refs.loader.show_loader = true;\n            try {\n              window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n                ids: [id]\n              })\n                .then((response) => {\n                  vm.$root.$children[0].$refs.loader.show_loader = false;\n                  response = response.data;\n                  if (response.status) {\n                    vm.student_leaves = window.helper.deleteMulti([id], vm.student_leaves)\n                    location.reload()\n                  }\n                }).catch((error) => {\n                vm.$root.$children[0].$refs.loader.show_loader = false;\n                window.helper.handleError(error, vm);\n              });\n            } catch (e) {\n              console.log(e)\n            }\n          }\n        })\n      },\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}