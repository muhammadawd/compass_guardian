{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Terms/Add/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Terms/Add/Index.vue","mtime":1580890265264},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\n\nexport default {\n  components: {\n    Multiselect, flatPickr\n  },\n  data() {\n    return {\n      dataModel: {\n        title_ar: '',\n        title_en: '',\n        class_rooms: []\n      },\n      subjects: [],\n      selectedSubjects: [],\n      loading: false\n    }\n  },\n  computed: {},\n  mounted() {\n  },\n  methods: {\n    customLabel({translated}) {\n      return `${translated.title}`\n    },\n    addTerm() {\n      const vm = this;\n      vm.openLoadingContained();\n      let request_data = vm.dataModel;\n      $('.span-text-validation').text('');\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.ADD_TERMS, request_data)\n          .then((response) => {\n            response = response.data;\n            if (response.status) {\n              window.helper.showMessage('success', vm);\n              vm.$router.push({name: 'terms'});\n              return null;\n            }\n            vm.closeLoadingContained()\n          }).catch((error) => {\n          vm.closeLoadingContained()\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/Terms/Add","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('add_term')}}</span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('title_ar')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-input class=\"w-full\" v-model=\"dataModel.title_ar\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"title_ar_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('title_en')\" v-model=\"dataModel.title_en\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"title_en_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('start_date')}} <span class=\"star\">*</span></label>\r\n              <flat-pickr class=\"w-full\" :label=\"$ml.get('start_date')\" v-model=\"dataModel.start_date\"></flat-pickr>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"start_date_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('end_date')}} <span class=\"star\">*</span></label>\r\n              <flat-pickr class=\"w-full\" :label=\"$ml.get('end_date')\" v-model=\"dataModel.end_date\"></flat-pickr>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"end_date_error\"></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"addTerm\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('add')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect, flatPickr\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {\r\n          title_ar: '',\r\n          title_en: '',\r\n          class_rooms: []\r\n        },\r\n        subjects: [],\r\n        selectedSubjects: [],\r\n        loading: false\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n    },\r\n    methods: {\r\n      customLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      addTerm() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.ADD_TERMS, request_data)\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'terms'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}