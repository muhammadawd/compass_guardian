{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/App.vue","mtime":1580369753894},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport themeConfig from '@/../themeConfig.js'\nimport Loader from '@/layouts/components/Loader';\n\nexport default {\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val);\n    }\n  },\n  components: {\n    Loader\n  },\n  async created() {\n    try {\n      await this.changeLang(this.$ml.current)\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  methods: {\n    changeLang(lang) {\n      this.$ml.change(lang)\n      let htmlEl = document.querySelector(\"html\");\n      const el = document.body;\n      let classNameToAdd = 'vuesax-app-is-rtl';\n      let classNameToRemove = 'vuesax-app-is-ltr';\n      let direction = 'rtl';\n      if (lang == 'en') {\n        classNameToAdd = 'vuesax-app-is-ltr';\n        classNameToRemove = 'vuesax-app-is-rtl';\n        direction = 'ltr'\n      }\n\n      htmlEl.setAttribute('lang', lang);\n      el.setAttribute('dir', direction);\n      el.classList.add(classNameToAdd);\n      el.classList.remove(classNameToRemove);\n    },\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n        document.body.classList.add('theme-dark');\n      } else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        document.body.classList.add('theme-semi-dark');\n      } else {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n      }\n    },\n    handleWindowResize(event) {\n      this.$store.dispatch('updateWindowWidth', event.currentTarget.innerWidth);\n    },\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme)\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.handleWindowResize);\n    });\n    this.$store.dispatch('updateWindowWidth', window.innerWidth);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Loader ref=\"loader\" />\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n  import themeConfig from '@/../themeConfig.js'\n  import Loader from '@/layouts/components/Loader';\n\n  export default {\n    watch: {\n      '$store.state.theme'(val) {\n        this.toggleClassInBody(val);\n      }\n    },\n    components: {\n      Loader\n    },\n    async created() {\n      try {\n        await this.changeLang(this.$ml.current)\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    methods: {\n      changeLang(lang) {\n        this.$ml.change(lang)\n        let htmlEl = document.querySelector(\"html\");\n        const el = document.body;\n        let classNameToAdd = 'vuesax-app-is-rtl';\n        let classNameToRemove = 'vuesax-app-is-ltr';\n        let direction = 'rtl';\n        if (lang == 'en') {\n          classNameToAdd = 'vuesax-app-is-ltr';\n          classNameToRemove = 'vuesax-app-is-rtl';\n          direction = 'ltr'\n        }\n\n        htmlEl.setAttribute('lang', lang);\n        el.setAttribute('dir', direction);\n        el.classList.add(classNameToAdd);\n        el.classList.remove(classNameToRemove);\n      },\n      toggleClassInBody(className) {\n        if (className == 'dark') {\n          if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n          document.body.classList.add('theme-dark');\n        } else if (className == 'semi-dark') {\n          if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n          document.body.classList.add('theme-semi-dark');\n        } else {\n          if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n          if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n        }\n      },\n      handleWindowResize(event) {\n        this.$store.dispatch('updateWindowWidth', event.currentTarget.innerWidth);\n      },\n    },\n    mounted() {\n      this.toggleClassInBody(themeConfig.theme)\n      this.$nextTick(() => {\n        window.addEventListener('resize', this.handleWindowResize);\n      });\n      this.$store.dispatch('updateWindowWidth', window.innerWidth);\n    },\n    beforeDestroy() {\n      window.removeEventListener('resize', this.handleWindowResize);\n    },\n  }\n\n</script>\n"]}]}