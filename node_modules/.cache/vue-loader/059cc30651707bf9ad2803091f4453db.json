{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Home.vue","mtime":1581504971856},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueApexCharts from 'vue-apexcharts'\nimport StatisticsCardLine from '@/components/statistics-cards/StatisticsCardLine.vue'\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/chart/bar'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/line'\n\nexport default {\n  data() {\n    return {\n      topStudentAbsence: [],\n      stages: [],\n      studentStages: {\n\n        // Make gradient line here\n        visualMap: [{\n          show: false,\n          type: 'continuous',\n          seriesIndex: 0,\n          min: 0,\n          max: 400\n        }],\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          data: ['test', 'test']\n        },\n        yAxis: {\n          splitLine: {show: false},\n        },\n        series: {\n          type: 'line',\n          showSymbol: false,\n          data: []\n        }\n      },\n\n      topStudentAbsencelineChart: {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: []\n        },\n        series: [\n          {\n            name: 'مرات الغياب',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            color: ['#FF9F43', '#28C76F', '#42a4f6', '#2e2e2e', '#EA5455'],\n            data: [],\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  components: {\n    ECharts,\n    VueApexCharts,\n    StatisticsCardLine\n  },\n  mounted() {\n    let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n    if (auth_data.type == 'student') {\n      this.$router.push({name: 'home_student'})\n    } else if (auth_data.type == 'teacher') {\n      this.$router.push({name: 'home_teacher'})\n    } else {\n      console.log('i\\'m here')\n    }\n\n    this.getHomeData();\n  },\n  methods: {\n    pieAnimation() {\n\n      let vm = this;\n      let dataIndex = -1\n      let pie = vm.$refs.pie\n\n      let dataLen = pie.options.series[0].data.length\n      let Interval = setInterval(() => {\n        pie.dispatchAction({\n          type: 'downplay',\n          seriesIndex: 0,\n          dataIndex\n        })\n        dataIndex = (dataIndex + 1) % dataLen\n        pie.dispatchAction({\n          type: 'highlight',\n          seriesIndex: 0,\n          dataIndex\n        })\n        pie.dispatchAction({\n          type: 'showTip',\n          seriesIndex: 0,\n          dataIndex\n        })\n      }, 1000);\n\n      setTimeout(() => {\n        clearInterval(Interval)\n      }, 5500)\n    },\n    getHomeData() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.GET_ADMIN_HOME_DATA)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.stages = response.data.stages;\n              vm.topStudentAbsence = response.data.topStudentAbsence;\n              // vm.topStudentAbsencelineChart.legend.data = [vm.$ml.get('late'), vm.$ml.get('present'), vm.$ml.get('absence')]\n              // vm.topStudentAbsencelineChart.series[0].data = [\n              //   {value: response.data.absence_statistic.late, name: vm.$ml.get('late')},\n              //   {value: response.data.absence_statistic.present, name: vm.$ml.get('present')},\n              //   {value: response.data.absence_statistic.absence, name: vm.$ml.get('absence')},\n              // ]\n              let dataPie = _.map(vm.topStudentAbsence, (item) => {\n                return {\n                  name: item.student ? item.student.name : '',\n                  value: item.absence_count,\n                };\n              })\n              vm.topStudentAbsencelineChart.legend.data = _.map(dataPie, 'name')\n              vm.topStudentAbsencelineChart.series[0].data = dataPie\n              //\n              let xData = _.map(vm.stages, 'translated.title')\n              let yData = _.map(vm.stages, 'students_count')\n              vm.studentStages.xAxis.data = (xData)\n              vm.studentStages.series.data = (yData)\n              vm.pieAnimation()\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col md:w-1/4 mb-base\">\r\n        <h3 class=\"text-bold text-center\">{{$ml.get('top_absense_students')}}</h3>\r\n        <e-charts autoresize :options=\"topStudentAbsencelineChart\" ref=\"pie\" auto-resize/>\r\n\r\n      </div>\r\n      <div class=\"vx-col md:w-3/4 mb-base\">\r\n        <h3 class=\"text-bold text-center\">{{$ml.get('student_count_term')}}</h3>\r\n        <e-charts autoresize :options=\"studentStages\" theme=\"ovilia-green\" ref=\"line\" auto-resize/>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import VueApexCharts from 'vue-apexcharts'\r\n  import StatisticsCardLine from '@/components/statistics-cards/StatisticsCardLine.vue'\r\n  import ECharts from 'vue-echarts/components/ECharts'\r\n  import 'echarts/lib/component/tooltip'\r\n  import 'echarts/lib/component/legend'\r\n  import 'echarts/lib/chart/pie'\r\n  import 'echarts/lib/chart/bar'\r\n  import 'echarts/lib/component/tooltip'\r\n  import 'echarts/lib/component/legend'\r\n  import 'echarts/lib/chart/line'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        topStudentAbsence: [],\r\n        stages: [],\r\n        studentStages: {\r\n\r\n          // Make gradient line here\r\n          visualMap: [{\r\n            show: false,\r\n            type: 'continuous',\r\n            seriesIndex: 0,\r\n            min: 0,\r\n            max: 400\r\n          }],\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          xAxis: {\r\n            data: ['test', 'test']\r\n          },\r\n          yAxis: {\r\n            splitLine: {show: false},\r\n          },\r\n          series: {\r\n            type: 'line',\r\n            showSymbol: false,\r\n            data: []\r\n          }\r\n        },\r\n\r\n        topStudentAbsencelineChart: {\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left',\r\n            data: []\r\n          },\r\n          series: [\r\n            {\r\n              name: 'مرات الغياب',\r\n              type: 'pie',\r\n              radius: '55%',\r\n              center: ['50%', '60%'],\r\n              color: ['#FF9F43', '#28C76F', '#42a4f6', '#2e2e2e', '#EA5455'],\r\n              data: [],\r\n              itemStyle: {\r\n                emphasis: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n      }\r\n    },\r\n    components: {\r\n      ECharts,\r\n      VueApexCharts,\r\n      StatisticsCardLine\r\n    },\r\n    mounted() {\r\n      let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n      if (auth_data.type == 'student') {\r\n        this.$router.push({name: 'home_student'})\r\n      } else if (auth_data.type == 'teacher') {\r\n        this.$router.push({name: 'home_teacher'})\r\n      } else {\r\n        console.log('i\\'m here')\r\n      }\r\n\r\n      this.getHomeData();\r\n    },\r\n    methods: {\r\n      pieAnimation() {\r\n\r\n        let vm = this;\r\n        let dataIndex = -1\r\n        let pie = vm.$refs.pie\r\n\r\n        let dataLen = pie.options.series[0].data.length\r\n        let Interval = setInterval(() => {\r\n          pie.dispatchAction({\r\n            type: 'downplay',\r\n            seriesIndex: 0,\r\n            dataIndex\r\n          })\r\n          dataIndex = (dataIndex + 1) % dataLen\r\n          pie.dispatchAction({\r\n            type: 'highlight',\r\n            seriesIndex: 0,\r\n            dataIndex\r\n          })\r\n          pie.dispatchAction({\r\n            type: 'showTip',\r\n            seriesIndex: 0,\r\n            dataIndex\r\n          })\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          clearInterval(Interval)\r\n        }, 5500)\r\n      },\r\n      getHomeData() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.GET_ADMIN_HOME_DATA)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.stages = response.data.stages;\r\n                vm.topStudentAbsence = response.data.topStudentAbsence;\r\n                // vm.topStudentAbsencelineChart.legend.data = [vm.$ml.get('late'), vm.$ml.get('present'), vm.$ml.get('absence')]\r\n                // vm.topStudentAbsencelineChart.series[0].data = [\r\n                //   {value: response.data.absence_statistic.late, name: vm.$ml.get('late')},\r\n                //   {value: response.data.absence_statistic.present, name: vm.$ml.get('present')},\r\n                //   {value: response.data.absence_statistic.absence, name: vm.$ml.get('absence')},\r\n                // ]\r\n                let dataPie = _.map(vm.topStudentAbsence, (item) => {\r\n                  return {\r\n                    name: item.student ? item.student.name : '',\r\n                    value: item.absence_count,\r\n                  };\r\n                })\r\n                vm.topStudentAbsencelineChart.legend.data = _.map(dataPie, 'name')\r\n                vm.topStudentAbsencelineChart.series[0].data = dataPie\r\n                //\r\n                let xData = _.map(vm.stages, 'translated.title')\r\n                let yData = _.map(vm.stages, 'students_count')\r\n                vm.studentStages.xAxis.data = (xData)\r\n                vm.studentStages.series.data = (yData)\r\n                vm.pieAnimation()\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n"]}]}