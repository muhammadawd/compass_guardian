{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/showExamResult/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/showExamResult/Index.vue","mtime":1581000258904},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    return {\n      dataModel: {},\n      current_question_index: 0,\n      loading:\n        false,\n    }\n  },\n  computed: {},\n  mounted() {\n    this.findStudentExams();\n  },\n  methods: {\n    asnwerTag(answer, answers) {\n      let _answers = _.map(answers, (ans) => {\n        return parseInt(ans.answer);\n      });\n      if (_answers.includes(answer.id)) {\n\n        return 'true';\n      }\n      return 'false';\n    },\n    findStudentExams() {\n      let vm = this;\n      let id = vm.$route.params.id;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENT_EXAM_WITH_ANSWER_ID + `/${id}`)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.dataModel = response.data.studentExam;\n              console.log(vm.dataModel)\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/Students/showExamResult","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">\r\n                {{$ml.get('your_result_p')}}\r\n            </span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\" v-if=\"dataModel.exam\">\r\n            <div class=\"vx-col w-full mb-base\">\r\n              <div class=\"vx-card bg-primary-gradient p-0 m-0 text-center\"><!---->\r\n                <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n                  <div class=\"vx-card__body m-0\">\r\n                    <h3 class=\"text-bold text-right\">\r\n                      {{dataModel.exam.subject.translated.title}}<br>\r\n                      <span class=\"text-info\"\r\n                            style=\"font-size: 18px\">{{dataModel.exam.name}}</span>\r\n                      <br>\r\n                      <span class=\"mt-2\" style=\"font-size: 14px\">{{dataModel.exam.created_at}}</span>\r\n                    </h3>\r\n                    <br>\r\n                    <div class=\"vx-row text-center \" style=\"background: #fff;width: 250px\">\r\n                      <div class=\"vx-col w-full text-center\" dir=\"ltr\">\r\n                        <h1 class=\"text-bold mt-3\">{{parseFloat(dataModel.degree).toFixed(2)}} /\r\n                          {{parseFloat(dataModel.exam ? dataModel.exam.degree : 0\r\n                          ).toFixed(2)}}</h1>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </vx-card>\r\n\r\n        <vx-card class=\"text-right mt-3 mb-4\" v-if=\"dataModel.questions\" style=\"background: #efefef\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full mb-base\" v-for=\"(que , current_question_index) in dataModel.questions\"\r\n                 :key=\"current_question_index\">\r\n              <h1 class=\"text-bold mb-3\">{{dataModel.questions[current_question_index].question.name}}\r\n                ({{dataModel.questions[current_question_index].question.degree}} /\r\n                {{dataModel.questions[current_question_index].exam_question ?\r\n                dataModel.questions[current_question_index].exam_question.degree : '0'}})</h1>\r\n              <div class=\"vx-row\" v-if=\"dataModel.questions[current_question_index].question.type == 'mcq'\">\r\n                <div class=\"vx-col w-full mb-base\">\r\n                  <div class=\"vx-row\">\r\n                    <div class=\"vx-col md:w-1/4 mb-base\"\r\n                         v-for=\"(answer,key) in dataModel.questions[current_question_index].question.answers\"\r\n                         :key=\"key\">\r\n                      <i v-if=\"asnwerTag(answer,dataModel.questions[current_question_index].answers) == 'true'\"\r\n                         class=\"fa fa-bell text-primary\"></i>\r\n                      <label class=\"vs-input--label\" :for=\"`check-${answer.id}${key}`\" style=\"cursor: pointer\">\r\n                        <input type=\"checkbox\" :id=\"`check-${answer.id}${key}`\"\r\n                               @change=\"updateStorageModel(dataModel.questions[current_question_index].question,dataModel.questions[current_question_index].question.answers[key])\"\r\n                               v-model=\"dataModel.questions[current_question_index].question.answers[key].is_correct\"\r\n                               value=\"1\">\r\n                        <div class=\"text-center mt-2\"\r\n                             v-if=\"dataModel.questions[current_question_index].question.answers[key].file_path\"\r\n                             style=\"box-shadow: 1px 2px 12px #aaa;border-radius: 90px 0 90px;width:100%;height: 350px;overflow: hidden;display: inline-block;background: #fff\">\r\n                          <p class=\"text-center text-bold mt-2 text-primary\" style=\"font-size: 15px\">\r\n                            {{dataModel.questions[current_question_index].question.answers[key].answer_value}}</p>\r\n                          <img\r\n                            :src=\"dataModel.questions[current_question_index].question.answers[key].file_path.path\"\r\n                            style=\"margin: 20px auto;vertical-align: middle;width:60%;max-height: 400px\" alt=\"\">\r\n                        </div>\r\n                        <div class=\"text-center mt-2 p-3\"\r\n                             v-if=\"!dataModel.questions[current_question_index].question.answers[key].file_path\"\r\n                             style=\"box-shadow: 1px 2px 12px #aaa;border-radius: 10px;width:100%;background: #fff\">\r\n                          <p class=\"text-center text-bold mt-2 text-info\" style=\"font-size: 18px\">\r\n                            {{dataModel.questions[current_question_index].question.answers[key].answer_value}}</p>\r\n                        </div>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"vx-row\"\r\n                   v-if=\"dataModel.questions[current_question_index].question.type == 'true_false'\">\r\n                <div class=\"vx-col md:w-1/2 text-center mb-base\"\r\n                     v-for=\"(answer,key) in dataModel.questions[current_question_index].question.answers\"\r\n                     :key=\"key\">\r\n                  <i v-if=\"asnwerTag(answer,dataModel.questions[current_question_index].answers) == 'true'\" style=\"position: absolute;z-index: 9;\"\r\n                     class=\"fa fa-bell text-danger\"></i>\r\n                  <input type=\"radio\" :id=\"`radio-${key}`\" name=\"radio\"\r\n                         @change=\"updateStorageModel(dataModel.questions[current_question_index].question,dataModel.questions[current_question_index].question.answers[key])\"\r\n                         v-model=\"dataModel.questions[current_question_index].question.answers[key].is_correct\"\r\n                         value=\"1\">\r\n                  <label :for=\"`radio-${key}`\">\r\n                    <!--                          {{answer.value}}-->\r\n\r\n                    <img\r\n                      width=\"80\"\r\n                      v-if=\"answer.value == 'true'\"\r\n                      src=\"@/assets/images/elements/check.jpg\"\r\n                      alt=\"\">\r\n                    <img\r\n                      width=\"80\"\r\n                      v-if=\"answer.value == 'false'\"\r\n                      src=\"@/assets/images/elements/cross.jpg\"\r\n                      alt=\"\">\r\n                    <!--                          <i class=\"fa fa-credit-card-alt\" aria-hidden=\"true\"></i>-->\r\n                  </label>\r\n                  <!--                        <vs-select class=\"w-full\" :label=\"$ml.get('answer')\">-->\r\n                  <!--                          <vs-select-item value=\"true\" :text=\"$ml.get('true')\"></vs-select-item>-->\r\n                  <!--                          <vs-select-item value=\"false\" :text=\"$ml.get('false')\"></vs-select-item>-->\r\n                  <!--                        </vs-select>-->\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"vx-row\" v-if=\"dataModel.questions[current_question_index].question.type == 'text'\">\r\n                <div class=\"vx-col w-full mb-base\"\r\n                     v-if=\"dataModel.questions[current_question_index].question.answers[0]\">\r\n                  <input type=\"hidden\"\r\n                         v-model=\"dataModel.questions[current_question_index].question.answers[0].is_correct\"\r\n                         value=\"1\">\r\n                  <vs-textarea\r\n                    v-model=\"dataModel.questions[current_question_index].question.answers[0].answer_value\"\r\n                    @keyup=\"updateStorageModel(dataModel.questions[current_question_index].question,dataModel.questions[current_question_index].question.answers[0])\"\r\n                    :label=\"$ml.get('answer')\" style=\"background: #FFF\"\r\n                    rows=\"5\"></vs-textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <vs-divider/>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {},\r\n        current_question_index: 0,\r\n        loading:\r\n          false,\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      this.findStudentExams();\r\n    },\r\n    methods: {\r\n      asnwerTag(answer, answers) {\r\n        let _answers = _.map(answers, (ans) => {\r\n          return parseInt(ans.answer);\r\n        });\r\n        if (_answers.includes(answer.id)) {\r\n\r\n          return 'true';\r\n        }\r\n        return 'false';\r\n      },\r\n      findStudentExams() {\r\n        let vm = this;\r\n        let id = vm.$route.params.id;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_STUDENT_EXAM_WITH_ANSWER_ID + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.dataModel = response.data.studentExam;\r\n                console.log(vm.dataModel)\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  [id^=radio-] {\r\n    display: none;\r\n  }\r\n\r\n  [id^=radio-] + label {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    font-size: 50px;\r\n    color: #555;\r\n    cursor: pointer;\r\n    filter: grayscale(100%);\r\n  }\r\n\r\n  [id^=radio-]:checked + label {\r\n    color: tomato;\r\n    cursor: text;\r\n    filter: grayscale(0);\r\n  }\r\n\r\n  [id^=check-] {\r\n    display: none;\r\n  }\r\n\r\n  [id^=check-] ~ div {\r\n    filter: grayscale(100%);\r\n  }\r\n\r\n  [id^=check-]:checked ~ div {\r\n    filter: grayscale(0);\r\n    border: 2px dashed #1f89e0;\r\n  }\r\n</style>\r\n"]}]}