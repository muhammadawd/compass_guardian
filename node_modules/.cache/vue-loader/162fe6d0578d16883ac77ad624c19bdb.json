{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/TeacherLeave/All/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/TeacherLeave/All/Index.vue","mtime":1580635785959},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\n\nexport default {\n  components: {\n    flatPickr\n  },\n  data() {\n    return {\n      status: [],\n      teacher_leaves: [],\n      selected: [],\n      itemsPerPage: 5,\n      isMounted: false,\n      filterModel: {}\n    }\n  },\n  mounted() {\n    this.isMounted = true;\n    this.getAllStatus()\n    this.getAllTeacherLeaves()\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx\n      }\n      return 0\n    },\n  },\n  methods: {\n    getAllStatus() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.status = response.data.status.teacher_leave;\n              return\n            }\n            vm.status = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.status = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getStatusClass(status) {\n      if (status == 'accepted') {\n\n        return 'vs-chip-success';\n      } else if (status == 'rejected') {\n\n        return 'vs-chip-danger';\n      } else {\n\n        return 'vs-chip-warning';\n      }\n    },\n    prepareFilter(model) {\n\n      let date = model.date;\n      let start_date = null;\n      let end_date = null;\n\n      if (date) {\n        let arr = date.split(\" to \");\n        start_date = arr[0];\n        end_date = arr[1];\n      }\n\n      return {\n        status_id: model.status_id,\n        type: model.type,\n        start_date: start_date,\n        end_date: end_date ? end_date : start_date,\n      }\n    },\n    getAllTeacherLeaves() {\n      let vm = this;\n\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      let params = vm.prepareFilter(vm.filterModel);\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_TEACHER_LEAVES, {\n          params: params\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.teacher_leaves = response.data.teacherLeaves.data;\n              _.transform(response.data.teacherLeaves.data, function (result, value, key) {\n                // console.log(result, value, key);\n                value.teacher_name = value.teacher ? value.teacher.name : '';\n                value.status_name = value.status.translated.title;\n                result[key] = value;\n              }, {});\n              return\n            }\n            vm.teacher_leaves = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.teacher_leaves = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSelected() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: this.acceptAlert\n      })\n    },\n    acceptAlert() {\n      let vm = this;\n      let ids = vm.selected;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      ids = _.map(ids, 'id');\n      console.log(ids)\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_TEACHER_LEAVES, {\n          ids: ids\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.teacher_leaves = window.helper.deleteMulti(ids, vm.teacher_leaves)\n              location.reload()\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    deleteSingle(id) {\n      let vm = this;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: () => {\n          vm.$root.$children[0].$refs.loader.show_loader = true;\n          try {\n            window.serviceAPI.API().post(window.serviceAPI.DELETE_TEACHER_LEAVES, {\n              ids: [id]\n            })\n              .then((response) => {\n                vm.$root.$children[0].$refs.loader.show_loader = false;\n                response = response.data;\n                if (response.status) {\n                  vm.teacher_leaves = window.helper.deleteMulti([id], vm.teacher_leaves)\n                  location.reload()\n                }\n              }).catch((error) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              window.helper.handleError(error, vm);\n            });\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      })\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Index.vue","sourceRoot":"src/views/TeacherLeave/All","sourcesContent":["<template>\r\n  <div id=\"data-list-thumb-view\" class=\"data-list-container\">\r\n\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <vx-card class=\"text-center cursor-pointer\">\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full md:w-1/4 mb-base text-right\">\r\n              <label class=\"vs-input--label\">{{$ml.get('date')}}</label>\r\n              <flat-pickr class=\"w-full\"\r\n                          :config=\"{mode:'range'}\"\r\n                          v-model=\"filterModel.date\" :label=\"$ml.get('end_date')\"></flat-pickr>\r\n            </div>\r\n            <div class=\"vx-col w-full md:w-1/5 mb-base text-right\">\r\n              <label class=\"vs-input--label\">{{$ml.get('type')}}</label>\r\n              <vs-select class=\"w-full\" v-model=\"filterModel.type\">\r\n                <vs-select-item value=\"leave\" :text=\"$ml.get('leave')\"></vs-select-item>\r\n                <vs-select-item value=\"vacancy\" :text=\"$ml.get('vacancy')\"></vs-select-item>\r\n              </vs-select>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/5 mb-base text-right\">\r\n              <label class=\"vs-input--label\">{{$ml.get('status')}}</label>\r\n              <vs-select class=\"w-full\" v-model=\"filterModel.status_id\">\r\n                <vs-select-item v-for=\"(state,key) in status\" :value=\"state.id\" :key=\"key\"\r\n                                :text=\"state.translated.title\"></vs-select-item>\r\n              </vs-select>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 mb-base text-right\">\r\n              <vs-button color=\"primary\" type=\"border\" icon-pack=\"feather\" icon=\"icon-search\"\r\n                         @click=\"getAllTeacherLeaves\"></vs-button>\r\n            </div>\r\n          </div>\r\n          <vs-table ref=\"table\" multiple v-model=\"selected\" pagination :max-items=\"itemsPerPage\" search\r\n                    :data=\"teacher_leaves\">\r\n\r\n            <div slot=\"header\" class=\"flex flex-wrap-reverse items-center flex-grow justify-between\">\r\n\r\n              <div class=\"flex flex-wrap-reverse items-center\">\r\n\r\n                <!-- ADD NEW -->\r\n                <vs-button color=\"primary\" class=\"text-bold\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-plus\"\r\n                           @click=\"$router.push({name: 'teacher_leave_add'})\">\r\n                  {{$ml.get('add_new')}}\r\n                </vs-button>\r\n              </div>\r\n\r\n              <!-- ITEMS PER PAGE -->\r\n              <vs-dropdown vs-trigger-click class=\"cursor-pointer mb-4 ml-4\">\r\n                <div dir=\"ltr\"\r\n                     class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n                  <span class=\"mr-2\">{{ currentPage * itemsPerPage - (itemsPerPage - 1) }} - {{ teacher_leaves.length - currentPage * itemsPerPage > 0 ? currentPage * itemsPerPage : teacher_leaves.length }} of {{ teacher_leaves.length }}</span>\r\n                  <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\"/>\r\n                </div>\r\n                <vs-dropdown-menu>\r\n\r\n                  <vs-dropdown-item @click=\"itemsPerPage=5\">\r\n                    <span>5</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=10\">\r\n                    <span>10</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=15\">\r\n                    <span>15</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=20\">\r\n                    <span>20</span>\r\n                  </vs-dropdown-item>\r\n                </vs-dropdown-menu>\r\n              </vs-dropdown>\r\n            </div>\r\n\r\n            <template slot=\"thead\">\r\n              <vs-th>{{$ml.get('name')}}</vs-th>\r\n              <vs-th>{{$ml.get('type')}}</vs-th>\r\n              <vs-th>{{$ml.get('status')}}</vs-th>\r\n              <vs-th>{{$ml.get('start_date')}}</vs-th>\r\n              <vs-th>{{$ml.get('end_date')}}</vs-th>\r\n              <vs-th></vs-th>\r\n            </template>\r\n\r\n            <template slot-scope=\"{data}\">\r\n              <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td class=\"text-right\">\r\n                  <span v-if=\"tr.teacher\">\r\n                    {{tr.teacher.name}}\r\n                  </span>\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  {{$ml.get(tr.type)}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <span v-if=\"tr.status\">\r\n                    <div class=\"con-vs-chip ml-auto  con-color\" :class=\"getStatusClass(tr.status.name)\"\r\n                         style=\"color: rgba(255, 255, 255, 0.9);\">\r\n                      <span class=\"text-chip vs-chip--text\">{{tr.status.translated.title}}</span>\r\n                    </div>\r\n\r\n                  </span>\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  {{tr.start_date}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  {{tr.end_date}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <div class=\"btn-group\" dir=\"ltr\">\r\n                    <vs-button @click=\"deleteSingle(tr.id)\" type=\"line\"\r\n                               color=\"danger\">\r\n                      <i class=\"fa fa-times\"></i>\r\n                    </vs-button>\r\n                    <vs-button @click=\"$router.push({name:'teacher_leave_edit',params:{id:tr.id}})\" type=\"line\"\r\n                               color=\"primary\">\r\n                      <i class=\"fa fa-edit\"></i>\r\n                    </vs-button>\r\n                  </div>\r\n                </vs-td>\r\n              </vs-tr>\r\n            </template>\r\n\r\n          </vs-table>\r\n        </vx-card>\r\n        <vs-button @click=\"deleteSelected()\" class=\"mt-4\" :disabled=\"selected.length == 0\">\r\n          {{$ml.get('delete_selected')}}\r\n        </vs-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n\r\n  export default {\r\n    components: {\r\n      flatPickr\r\n    },\r\n    data() {\r\n      return {\r\n        status: [],\r\n        teacher_leaves: [],\r\n        selected: [],\r\n        itemsPerPage: 5,\r\n        isMounted: false,\r\n        filterModel: {}\r\n      }\r\n    },\r\n    mounted() {\r\n      this.isMounted = true;\r\n      this.getAllStatus()\r\n      this.getAllTeacherLeaves()\r\n    },\r\n    computed: {\r\n      currentPage() {\r\n        if (this.isMounted) {\r\n          return this.$refs.table.currentx\r\n        }\r\n        return 0\r\n      },\r\n    },\r\n    methods: {\r\n      getAllStatus() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.status = response.data.status.teacher_leave;\r\n                return\r\n              }\r\n              vm.status = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.status = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getStatusClass(status) {\r\n        if (status == 'accepted') {\r\n\r\n          return 'vs-chip-success';\r\n        } else if (status == 'rejected') {\r\n\r\n          return 'vs-chip-danger';\r\n        } else {\r\n\r\n          return 'vs-chip-warning';\r\n        }\r\n      },\r\n      prepareFilter(model) {\r\n\r\n        let date = model.date;\r\n        let start_date = null;\r\n        let end_date = null;\r\n\r\n        if (date) {\r\n          let arr = date.split(\" to \");\r\n          start_date = arr[0];\r\n          end_date = arr[1];\r\n        }\r\n\r\n        return {\r\n          status_id: model.status_id,\r\n          type: model.type,\r\n          start_date: start_date,\r\n          end_date: end_date ? end_date : start_date,\r\n        }\r\n      },\r\n      getAllTeacherLeaves() {\r\n        let vm = this;\r\n\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        let params = vm.prepareFilter(vm.filterModel);\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_TEACHER_LEAVES, {\r\n            params: params\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.teacher_leaves = response.data.teacherLeaves.data;\r\n                _.transform(response.data.teacherLeaves.data, function (result, value, key) {\r\n                  // console.log(result, value, key);\r\n                  value.teacher_name = value.teacher ? value.teacher.name : '';\r\n                  value.status_name = value.status.translated.title;\r\n                  result[key] = value;\r\n                }, {});\r\n                return\r\n              }\r\n              vm.teacher_leaves = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.teacher_leaves = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      deleteSelected() {\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: this.acceptAlert\r\n        })\r\n      },\r\n      acceptAlert() {\r\n        let vm = this;\r\n        let ids = vm.selected;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        ids = _.map(ids, 'id');\r\n        console.log(ids)\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_TEACHER_LEAVES, {\r\n            ids: ids\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.teacher_leaves = window.helper.deleteMulti(ids, vm.teacher_leaves)\r\n                location.reload()\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      deleteSingle(id) {\r\n        let vm = this;\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: () => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = true;\r\n            try {\r\n              window.serviceAPI.API().post(window.serviceAPI.DELETE_TEACHER_LEAVES, {\r\n                ids: [id]\r\n              })\r\n                .then((response) => {\r\n                  vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                  response = response.data;\r\n                  if (response.status) {\r\n                    vm.teacher_leaves = window.helper.deleteMulti([id], vm.teacher_leaves)\r\n                    location.reload()\r\n                  }\r\n                }).catch((error) => {\r\n                vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                window.helper.handleError(error, vm);\r\n              });\r\n            } catch (e) {\r\n              console.log(e)\r\n            }\r\n          }\r\n        })\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  #data-list-thumb-view {\r\n    .vs-con-table {\r\n\r\n      .vs-table--header {\r\n        display: flex;\r\n        flex-wrap: wrap-reverse;\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        > span {\r\n          display: flex;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .vs-table--search {\r\n          padding-top: 0;\r\n\r\n          .vs-table--search-input {\r\n            padding: 0.9rem 2.5rem;\r\n            font-size: 1rem;\r\n\r\n            & + i {\r\n              left: 1rem;\r\n            }\r\n\r\n            &:focus + i {\r\n              left: 1rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table {\r\n        border-collapse: separate;\r\n        border-spacing: 0 1.3rem;\r\n        padding: 0 1rem;\r\n\r\n\r\n        tr {\r\n          box-shadow: 0 4px 20px 0 rgba(0, 0, 0, .05);\r\n\r\n          td {\r\n            padding: 10px;\r\n\r\n            &:first-child {\r\n              border-top-left-radius: .5rem;\r\n              border-bottom-left-radius: .5rem;\r\n            }\r\n\r\n            &:last-child {\r\n              border-top-right-radius: .5rem;\r\n              border-bottom-right-radius: .5rem;\r\n            }\r\n\r\n            &.img-container {\r\n              // width: 1rem;\r\n              // background: #fff;\r\n\r\n              span {\r\n                display: flex;\r\n                justify-content: center;\r\n              }\r\n\r\n              .product-img {\r\n                height: 110px;\r\n              }\r\n            }\r\n          }\r\n\r\n          td.td-check {\r\n            padding: 20px !important;\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table--thead {\r\n        th {\r\n          padding-top: 0;\r\n          padding-bottom: 0;\r\n\r\n          .vs-table-text {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n          }\r\n        }\r\n\r\n        th.td-check {\r\n          padding: 0 15px !important;\r\n        }\r\n\r\n        tr {\r\n          background: none;\r\n          box-shadow: none;\r\n        }\r\n      }\r\n\r\n      .vs-table--pagination {\r\n        justify-content: center;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}