{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/StudentUpdateStage/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/StudentUpdateStage/Index.vue","mtime":1581325168849},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    return {\n      students: [],\n      selected: [],\n      itemsPerPage: 20,\n      isMounted: false,\n\n      stages: [],\n      selectedStage: null,\n      selectedNewStage: null,\n      isMulti: true,\n\n    }\n  },\n  mounted() {\n    this.isMounted = true;\n    this.getAllStudents()\n    this.getAllStages()\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx\n      }\n      return 0\n    },\n  },\n  watch: {\n    selected: function (n, o) {\n      this.selectedClassRooms = null;\n      n.length > 0 ? this.isMulti = false : this.isMulti = true;\n    },\n    selectedStage: function (newStage, oldStage) {\n      // if (oldStage != null) {\n      this.getAllStudents();\n      // }\n    }\n  },\n  methods: {\n    hasAccessPermission(permission) {\n      return window.helper.hasAccessPermission(permission);\n    },\n    customStageLabel({translated}) {\n      return `${translated.title}`\n    },\n    getAllStages() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.stages = response.data.stages.data;\n              // vm.classRooms = vm.stages.length > 0 ? vm.stages[0].class_rooms : [];\n              return\n            }\n            vm.stages = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.stages = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    getAllStudents() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      let stage_id = vm.selectedStage ? vm.selectedStage.id : -1;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENTS, {\n          params: {\n            stage_id: stage_id\n          }\n        })\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.students = response.data.students.data;\n              return\n            }\n            vm.students = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.students = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    addStudentClass() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      let stage_id = vm.selectedNewStage ? vm.selectedNewStage.id : null;\n      let ids = vm.selected;\n      ids = _.map(ids, 'id');\n      $('.span-text-validation').text('');\n\n      let request_data = {\n        student_ids: ids,\n        stage_id: stage_id,\n      };\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.UPDATE_STAGE_STUDENTS, request_data)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              window.helper.showMessage('success', vm);\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/Students/StudentUpdateStage","sourcesContent":["<template>\r\n  <div id=\"data-list-thumb-view\" class=\"data-list-container\">\r\n\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <vx-card class=\"text-center cursor-pointer\">\r\n\r\n          <vs-table ref=\"table\" multiple v-model=\"selected\" pagination :max-items=\"itemsPerPage\" search\r\n                    :data=\"students\">\r\n\r\n            <div slot=\"header\" class=\"flex flex-wrap-reverse items-center flex-grow justify-between\">\r\n\r\n              <div class=\"flex flex-wrap-reverse  items-center\">\r\n\r\n                <div class=\"vx-row  text-right\">\r\n                  <div class=\"vx-col md:w-1/2 mb-base\">\r\n                    <label class=\"vs-input--label\">{{$ml.get('stages')}}</label>\r\n                    <multiselect v-model=\"selectedStage\" :options=\"stages\" :multiple=\"false\" :close-on-select=\"true\"\r\n                                 open-direction=\"bottom\"\r\n                                 :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                                 :custom-label=\"customStageLabel\"\r\n                                 track-by=\"id\" :preselect-first=\"true\">\r\n                    </multiselect>\r\n                  </div>\r\n                  <div class=\"vx-col md:w-1/2 mb-base\">\r\n                    <label class=\"vs-input--label\">{{$ml.get('new_stages')}}</label>\r\n                    <multiselect v-model=\"selectedNewStage\" :options=\"stages\" :multiple=\"false\" :close-on-select=\"true\"\r\n                                 open-direction=\"bottom\"\r\n                                 :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                                 :custom-label=\"customStageLabel\"\r\n                                 track-by=\"id\" :preselect-first=\"true\">\r\n                    </multiselect>\r\n                    <span class=\"span-text-validation text-danger text-bold\" id=\"stage_id_error\"></span>\r\n                  </div>\r\n\r\n                  <div class=\"vx-col md:w-1/1 mb-base\">\r\n                    <!-- ADD NEW -->\r\n                    <vs-button color=\"primary\" class=\"text-bold m-4\" :disabled=\"selected.length == 0\"\r\n                               v-if=\"hasAccessPermission('update-student-stage')\"\r\n                               @click=\"addStudentClass()\">\r\n                      {{$ml.get('students_update_stage')}}\r\n                    </vs-button>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              <!-- ITEMS PER PAGE -->\r\n              <vs-dropdown vs-trigger-click class=\"cursor-pointer mb-4 ml-4\">\r\n                <div dir=\"ltr\"\r\n                     class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n                  <span class=\"mr-2\">{{ currentPage * itemsPerPage - (itemsPerPage - 1) }} - {{ students.length - currentPage * itemsPerPage > 0 ? currentPage * itemsPerPage : students.length }} of {{ students.length }}</span>\r\n                  <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\"/>\r\n                </div>\r\n                <!-- <vs-button class=\"btn-drop\" type=\"line\" color=\"primary\" icon-pack=\"feather\" icon=\"icon-chevron-down\"></vs-button> -->\r\n                <vs-dropdown-menu>\r\n\r\n                  <vs-dropdown-item @click=\"itemsPerPage=5\">\r\n                    <span>5</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=10\">\r\n                    <span>10</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=15\">\r\n                    <span>15</span>\r\n                  </vs-dropdown-item>\r\n                  <vs-dropdown-item @click=\"itemsPerPage=20\">\r\n                    <span>20</span>\r\n                  </vs-dropdown-item>\r\n                </vs-dropdown-menu>\r\n              </vs-dropdown>\r\n            </div>\r\n\r\n            <span class=\"span-text-validation text-danger text-bold\" id=\"student_ids_error\"></span>\r\n\r\n            <template slot=\"thead\">\r\n              <vs-th>{{$ml.get('name')}}</vs-th>\r\n              <vs-th>{{$ml.get('age')}}</vs-th>\r\n              <vs-th>{{$ml.get('father_name')}}</vs-th>\r\n              <vs-th>{{$ml.get('father_phone')}}</vs-th>\r\n              <vs-th>{{$ml.get('class_room')}}</vs-th>\r\n            </template>\r\n\r\n            <template slot-scope=\"{data}\">\r\n              <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td class=\"text-right\">\r\n                  {{tr.name}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  {{tr.age}}\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <slot v-if=\"tr.parent\">\r\n                    {{tr.parent.father_name}}\r\n                  </slot>\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <slot v-if=\"tr.parent\">\r\n                    {{tr.parent.father_phone}}\r\n                  </slot>\r\n                </vs-td>\r\n                <vs-td class=\"text-right\">\r\n                  <slot v-if=\"tr.student_term\">\r\n                    {{tr.student_term.class_room.translated.title}}\r\n                  </slot>\r\n                  <slot v-if=\"!tr.student_term\">\r\n                    -\r\n                  </slot>\r\n                </vs-td>\r\n              </vs-tr>\r\n            </template>\r\n          </vs-table>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect\r\n    },\r\n    data() {\r\n      return {\r\n        students: [],\r\n        selected: [],\r\n        itemsPerPage: 20,\r\n        isMounted: false,\r\n\r\n        stages: [],\r\n        selectedStage: null,\r\n        selectedNewStage: null,\r\n        isMulti: true,\r\n\r\n      }\r\n    },\r\n    mounted() {\r\n      this.isMounted = true;\r\n      this.getAllStudents()\r\n      this.getAllStages()\r\n    },\r\n    computed: {\r\n      currentPage() {\r\n        if (this.isMounted) {\r\n          return this.$refs.table.currentx\r\n        }\r\n        return 0\r\n      },\r\n    },\r\n    watch: {\r\n      selected: function (n, o) {\r\n        this.selectedClassRooms = null;\r\n        n.length > 0 ? this.isMulti = false : this.isMulti = true;\r\n      },\r\n      selectedStage: function (newStage, oldStage) {\r\n        // if (oldStage != null) {\r\n        this.getAllStudents();\r\n        // }\r\n      }\r\n    },\r\n    methods: {\r\n      hasAccessPermission(permission) {\r\n        return window.helper.hasAccessPermission(permission);\r\n      },\r\n      customStageLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      getAllStages() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.stages = response.data.stages.data;\r\n                // vm.classRooms = vm.stages.length > 0 ? vm.stages[0].class_rooms : [];\r\n                return\r\n              }\r\n              vm.stages = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.stages = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllStudents() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        let stage_id = vm.selectedStage ? vm.selectedStage.id : -1;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENTS, {\r\n            params: {\r\n              stage_id: stage_id\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.students = response.data.students.data;\r\n                return\r\n              }\r\n              vm.students = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.students = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      addStudentClass() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        let stage_id = vm.selectedNewStage ? vm.selectedNewStage.id : null;\r\n        let ids = vm.selected;\r\n        ids = _.map(ids, 'id');\r\n        $('.span-text-validation').text('');\r\n\r\n        let request_data = {\r\n          student_ids: ids,\r\n          stage_id: stage_id,\r\n        };\r\n\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.UPDATE_STAGE_STUDENTS, request_data)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  #data-list-thumb-view {\r\n    .vs-con-table {\r\n\r\n      .vs-table--header {\r\n        display: flex;\r\n        flex-wrap: wrap-reverse;\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        > span {\r\n          display: flex;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .vs-table--search {\r\n          padding-top: 0;\r\n\r\n          .vs-table--search-input {\r\n            padding: 0.9rem 2.5rem;\r\n            font-size: 1rem;\r\n\r\n            & + i {\r\n              left: 1rem;\r\n            }\r\n\r\n            &:focus + i {\r\n              left: 1rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table {\r\n        border-collapse: separate;\r\n        border-spacing: 0 1.3rem;\r\n        padding: 0 1rem;\r\n\r\n\r\n        tr {\r\n          box-shadow: 0 4px 20px 0 rgba(0, 0, 0, .05);\r\n\r\n          td {\r\n            padding: 10px;\r\n\r\n            &:first-child {\r\n              border-top-left-radius: .5rem;\r\n              border-bottom-left-radius: .5rem;\r\n            }\r\n\r\n            &:last-child {\r\n              border-top-right-radius: .5rem;\r\n              border-bottom-right-radius: .5rem;\r\n            }\r\n\r\n            &.img-container {\r\n              // width: 1rem;\r\n              // background: #fff;\r\n\r\n              span {\r\n                display: flex;\r\n                justify-content: center;\r\n              }\r\n\r\n              .product-img {\r\n                height: 110px;\r\n              }\r\n            }\r\n          }\r\n\r\n          td.td-check {\r\n            padding: 20px !important;\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table--thead {\r\n        th {\r\n          padding-top: 0;\r\n          padding-bottom: 0;\r\n\r\n          .vs-table-text {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n          }\r\n        }\r\n\r\n        th.td-check {\r\n          padding: 0 15px !important;\r\n        }\r\n\r\n        tr {\r\n          background: none;\r\n          box-shadow: none;\r\n        }\r\n      }\r\n\r\n      .vs-table--pagination {\r\n        justify-content: center;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}