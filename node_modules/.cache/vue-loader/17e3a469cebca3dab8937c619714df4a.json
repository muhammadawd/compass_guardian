{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Complaints/AllParents/Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Complaints/AllParents/Edit.vue","mtime":1580892974069},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Multiselect from 'vue-multiselect'\nimport 'vue-multiselect/dist/vue-multiselect.min.css'\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\n\nexport default {\n  data() {\n    return {\n      findId: '',\n      loading: false,\n      dataModel: {},\n      teachers: [],\n      selectedTeacher: null,\n    }\n  },\n  computed: {},\n  components: {Multiselect, flatPickr},\n  mounted() {\n    this.findId = this.$route.params.id;\n    this.findComplaint();\n    this.getAllTeachers();\n  },\n  methods: {\n    customLabel({name}) {\n      return `${name}`\n    },\n    getAllTeachers() {\n      let vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_TEACHERS)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            console.log(response)\n            if (response.status) {\n              vm.teachers = response.data.teachers.data;\n              return\n            }\n            vm.teachers = [];\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.teachers = [];\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    findComplaint() {\n\n      let vm = this;\n      let id = vm.findId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_PARENTS_COMPLAINTS + `/${id}`)\n          .then((response) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            response = response.data;\n            if (response.status) {\n              vm.dataModel = response.data.complaint\n              vm.selectedTeacher = vm.dataModel.teacher;\n              return\n            }\n          }).catch((error) => {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    editComplaint() {\n      let vm = this;\n      vm.openLoadingContained();\n      let request_data = vm.dataModel;\n      request_data.teacher_id = vm.dataModel.teacher ? vm.dataModel.teacher.id : '';\n      $('.span-text-validation').text('');\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.EDIT_PARENTS_COMPLAINTS, request_data)\n          .then((response) => {\n            response = response.data;\n            if (response.status) {\n              window.helper.showMessage('success', vm);\n              vm.$router.push({name: 'parents_complaints'});\n              return null;\n            }\n            vm.closeLoadingContained()\n          }).catch((error) => {\n          vm.closeLoadingContained()\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      })\n    },\n    closeLoadingContained() {\n      setTimeout(() => {\n        this.loading = false;\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\n      }, 100);\n    },\n  },\n}\n",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/views/Complaints/AllParents","sourcesContent":["<!-- =========================================================================================\r\n    File Name: KnowledgeBase.vue\r\n    Description: Knowledge Base Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('edit_parent_complaint')}}</span>\r\n          </vs-alert>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n\r\n              <label class=\"vs-input--label\">{{$ml.get('type')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-select  class=\"w-full\"  v-model=\"dataModel.type\">\r\n                <vs-select-item value=\"complaint\" :text=\"$ml.get('complaint')\"></vs-select-item>\r\n                <vs-select-item value=\"proposal\" :text=\"$ml.get('proposal')\"></vs-select-item>\r\n              </vs-select>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"type_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n\r\n              <label class=\"vs-input--label\">{{$ml.get('teachers')}}</label>\r\n              <multiselect v-model=\"dataModel.teacher\" :options=\"teachers\" :multiple=\"false\" :close-on-select=\"true\" open-direction=\"bottom\"\r\n                           :clear-on-select=\"true\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"teacher_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('end_date')}}</label>\r\n              <flat-pickr class=\"w-full\" :label=\"$ml.get('end_date')\"\r\n                          v-model=\"dataModel.end_at\"></flat-pickr>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"end_at_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('rate')}}</label>\r\n              <h3>{{dataModel.rate ? dataModel.rate : 0}}/5</h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col   mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('text')}}</label>\r\n              <h3>{{dataModel.text}}</h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\" @click=\"editComplaint()\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('edit')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        findId: '',\r\n        loading: false,\r\n        dataModel: {},\r\n        teachers: [],\r\n        selectedTeacher: null,\r\n      }\r\n    },\r\n    computed: {},\r\n    components: {Multiselect, flatPickr},\r\n    mounted() {\r\n      this.findId = this.$route.params.id;\r\n      this.findComplaint();\r\n      this.getAllTeachers();\r\n    },\r\n    methods: {\r\n      customLabel({name}) {\r\n        return `${name}`\r\n      },\r\n      getAllTeachers() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_TEACHERS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.teachers = response.data.teachers.data;\r\n                return\r\n              }\r\n              vm.teachers = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.teachers = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      findComplaint() {\r\n\r\n        let vm = this;\r\n        let id = vm.findId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_PARENTS_COMPLAINTS + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.dataModel = response.data.complaint\r\n                vm.selectedTeacher = vm.dataModel.teacher;\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      editComplaint() {\r\n        let vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        request_data.teacher_id = vm.dataModel.teacher ? vm.dataModel.teacher.id : '';\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.EDIT_PARENTS_COMPLAINTS, request_data)\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'parents_complaints'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}