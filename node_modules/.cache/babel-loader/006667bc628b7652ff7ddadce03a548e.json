{"remainingRequest":"/home/muhammadawd/WebstormProjects/Hendy/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Hendy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Hendy/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Hendy/src/views/Settings/Slider/Add/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Hendy/src/views/Settings/Slider/Add/Index.vue","mtime":1577870608663},{"path":"/home/muhammadawd/WebstormProjects/Hendy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Hendy/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Hendy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Hendy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      dataModel: {}\n    };\n  },\n  computed: {},\n  methods: {\n    handleFileUpload: function handleFileUpload() {\n      var vm = this;\n      vm.dataModel.image = vm.$refs.image.files[0];\n    },\n    addCategory: function addCategory() {\n      var vm = this;\n      vm.openLoadingContained();\n      var request_data = vm.dataModel;\n      $('.span-text-validation').text('');\n      var form_data = new FormData();\n      $.each(request_data, function (key, value) {\n        form_data.append(key, value);\n      });\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.ADD_CATEGORIES, form_data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(function (response) {\n          response = response.data;\n\n          if (response.status) {\n            window.helper.showMessage('success', vm);\n            vm.$router.push({\n              name: 'meals_categories'\n            });\n            return null;\n          }\n\n          vm.closeLoadingContained();\n        }).catch(function (error) {\n          vm.closeLoadingContained();\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openLoadingContained: function openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n    },\n    closeLoadingContained: function closeLoadingContained() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.loading = false;\n\n        _this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      }, 100);\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,QAAA,EAAA,EAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAJA;AAKA,IAAA,WALA,yBAKA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,EAAA,CAAA,oBAAA;AACA,UAAA,YAAA,GAAA,EAAA,CAAA,SAAA;AACA,MAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,SAAA,GAAA,IAAA,QAAA,EAAA;AACA,MAAA,CAAA,CAAA,IAAA,CAAA,YAAA,EAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,QAAA,SAAA,CAAA,MAAA,CAAA,GAAA,EAAA,KAAA;AACA,OAFA;;AAGA,UAAA;AACA,QAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,IAAA,CAAA,MAAA,CAAA,UAAA,CAAA,cAAA,EAAA,SAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,4BAAA;AADA;AADA,SAAA,EAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,UAAA,QAAA,GAAA,QAAA,CAAA,IAAA;;AACA,cAAA,QAAA,CAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,SAAA,EAAA,EAAA;AACA,YAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,mBAAA,IAAA;AACA;;AACA,UAAA,EAAA,CAAA,qBAAA;AACA,SAbA,EAaA,KAbA,CAaA,UAAA,KAAA,EAAA;AACA,UAAA,EAAA,CAAA,qBAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,EAAA;AACA,SAhBA;AAiBA,OAlBA,CAkBA,OAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,KAnCA;AAoCA,IAAA,oBApCA,kCAoCA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,GAAA,CAAA,OAAA,CAAA;AACA,QAAA,UAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,SAAA,EAAA,sBAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAAA;AAMA,KA5CA;AA6CA,IAAA,qBA7CA,mCA6CA;AAAA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,wCAAA;AACA,OAHA,EAGA,GAHA,CAAA;AAIA;AAlDA;AARA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n    File Name: KnowledgeBase.vue\r\n    Description: Knowledge Base Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('add_slider')}}</span>\r\n          </vs-alert>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('title_ar')\" v-model=\"dataModel.title_ar\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"title_ar_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('title_en')\" v-model=\"dataModel.title_en\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"title_en_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <div class=\"vs-component vs-con-input-label vs-input w-full vs-input-primary\">\r\n                <label class=\"vs-input--label\">{{$ml.get('image')}}</label>\r\n                <div class=\"vs-con-input\">\r\n                  <input type=\"file\" accept=\"image/*\" ref=\"image\" class=\"vs-inputx vs-input--input normal\"\r\n                         v-on:change=\"handleFileUpload()\">\r\n                  <span class=\"span-text-validation text-danger text-bold\" id=\"image_error\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/2 mb-base\">\r\n              <vs-textarea :label=\"$ml.get('description_ar')\" class=\"w-full\"\r\n                           :label-placeholder=\"$ml.get('description_ar')\" v-model=\"dataModel.description_ar\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"description_ar_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/2 mb-base\">\r\n              <vs-textarea :label=\"$ml.get('description_en')\" class=\"w-full\"\r\n                           :label-placeholder=\"$ml.get('description_en')\" v-model=\"dataModel.description_en\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"description_en_error\"></span>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\" :disabled=\"loading\"\r\n                         @click=\"addCategory\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('add')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        dataModel: {}\r\n      }\r\n    },\r\n    computed: {},\r\n    methods: {\r\n      handleFileUpload() {\r\n        let vm = this;\r\n        vm.dataModel.image = vm.$refs.image.files[0];\r\n      },\r\n      addCategory() {\r\n        let vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        $('.span-text-validation').text('');\r\n        let form_data = new FormData();\r\n        $.each(request_data, (key, value) => {\r\n          form_data.append(key, value)\r\n        })\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.ADD_CATEGORIES, form_data, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          })\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name:'meals_categories'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"],"sourceRoot":"src/views/Settings/Slider/Add"}]}