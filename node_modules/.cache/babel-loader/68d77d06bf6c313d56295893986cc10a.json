{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/TeacherExams/CorrectExam/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/TeacherExams/CorrectExam/Index.vue","mtime":1580897562219},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport 'vue-multiselect/dist/vue-multiselect.min.css';\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nexport default {\n  components: {\n    Multiselect: Multiselect,\n    flatPickr: flatPickr\n  },\n  data: function data() {\n    return {\n      questions: [],\n      findModelSerial: null,\n      loading: false\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    var auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n    this.findId = auth_data.user.id;\n    this.findModelSerial = this.$route.params.serial;\n    this.findExam();\n  },\n  methods: {\n    findExam: function findExam() {\n      var vm = this;\n      var serial = vm.findModelSerial;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_TEACHERS_EXAMS + \"/\".concat(serial), {\n          params: {\n            limit: 5\n          }\n        }).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.questions = response.data.questions.data;\n            return;\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    correctExam: function correctExam() {\n      var vm = this;\n      vm.openLoadingContained();\n      var questions = [];\n\n      _.each(vm.questions, function (item, key) {\n        questions.push({\n          id: item.id,\n          degree: item.degree\n        });\n      });\n\n      var request_data = {\n        questions: questions\n      };\n      $('.span-text-validation').text('');\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.UPDATE_TEACHERS_EXAMS, request_data).then(function (response) {\n          response = response.data;\n\n          if (response.status) {\n            window.helper.showMessage('success', vm);\n            location.reload();\n            return null;\n          }\n\n          vm.closeLoadingContained();\n        }).catch(function (error) {\n          vm.closeLoadingContained();\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openLoadingContained: function openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n    },\n    closeLoadingContained: function closeLoadingContained() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.loading = false;\n\n        _this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      }, 100);\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('teacher_all_exams')}}</span>\r\n          </vs-alert>\r\n\r\n          <vs-alert class=\"mb-4\" color=\"danger\" v-if=\"questions.length == 0\">\r\n            <h3 class=\"text-bold\">{{$ml.get('no_exams')}}</h3>\r\n          </vs-alert>\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full mb-base\" v-for=\"(question , key) in questions\" :key=\"key\">\r\n              <h3 class=\"text-bold\">{{question.question.name}} <span class=\"star\">*</span></h3>\r\n              <vs-input type=\"number\" :max=\"question.exam_question.degree\" min=\"0\" v-model=\"questions[key].degree\"\r\n                        :label=\"$ml.get('degree') + ` (${question.exam_question.degree})`\" class=\"mb-3\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" :id=\"`questions.${key}.degree_error`\"></span>\r\n              <vs-textarea v-for=\"(answer,index) in question.answers\" :key=\"index\" row=\"5\"\r\n                           v-model=\"question.answers[index].answer\" :label=\"$ml.get('answer')\"></vs-textarea>\r\n              <hr v-if=\"questions.length > key+1\">\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"questions.length == 0 || loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"correctExam\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('correct')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect, flatPickr\r\n    },\r\n    data() {\r\n      return {\r\n        questions: [],\r\n        findModelSerial: null,\r\n        loading: false\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n      this.findId = auth_data.user.id;\r\n      this.findModelSerial = this.$route.params.serial;\r\n      this.findExam()\r\n    },\r\n    methods: {\r\n      findExam() {\r\n\r\n        let vm = this;\r\n        let serial = vm.findModelSerial;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_TEACHERS_EXAMS + `/${serial}`, {\r\n            params: {\r\n              limit: 5\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.questions = response.data.questions.data\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n\r\n      correctExam() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let questions = [];\r\n        _.each(vm.questions, (item, key) => {\r\n          questions.push({\r\n            id: item.id,\r\n            degree: item.degree,\r\n          });\r\n        });\r\n        let request_data = {questions: questions};\r\n\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.UPDATE_TEACHERS_EXAMS, request_data)\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                location.reload()\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"],"sourceRoot":"src/views/TeacherExams/CorrectExam"}]}