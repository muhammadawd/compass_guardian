{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/QuestionsBank/Edit/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/QuestionsBank/Edit/Index.vue","mtime":1580904928280},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport 'vue-multiselect/dist/vue-multiselect.min.css';\nexport default {\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      dataModel: {\n        type: 'mcq',\n        answers: []\n      },\n      teacher: {},\n      q_types: ['mcq', 'true_false', 'text'],\n      subjects: [],\n      selectedSubjects: null,\n      stages: [],\n      selectedStage: null,\n      findId: null,\n      findModelId: null,\n      loading: false\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    var auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n    this.findModelId = this.$route.params.id;\n    this.findId = auth_data.user.id;\n    this.findTeacher();\n    this.getAllStages(); // this.getAllSubjects()\n\n    this.findQuestionBank();\n  },\n  methods: {\n    deleteRow: function deleteRow(key) {\n      var vm = this;\n      vm.dataModel.answers.splice(key, 1);\n    },\n    customLabel: function customLabel(_ref) {\n      var translated = _ref.translated;\n      return \"\".concat(translated.title);\n    },\n    customStageLabel: function customStageLabel(_ref2) {\n      var translated = _ref2.translated;\n      return \"\".concat(translated.title);\n    },\n    getAllStages: function getAllStages() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.stages = response.data.stages.data; // vm.classRooms = vm.stages.length > 0 ? vm.stages[0].class_rooms : [];\n\n            return;\n          }\n\n          vm.stages = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.stages = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    changeQuestionType: function changeQuestionType() {\n      // this.dataModel.answers = []\n      console.log(this.dataModel.type); // if (this.dataModel.type == 'text') {\n      //   this.dataModel.answers = [{\n      //     value: '',\n      //     is_correct: 1\n      //   }];\n      // }\n    },\n    changeQuestionTruefalse: function changeQuestionTruefalse() {\n      var vm = this;\n      var tflag = 0;\n      var fflag = 0;\n\n      if (vm.dataModel.true_false == 'true') {\n        tflag = 1;\n        fflag = 0;\n      } else {\n        tflag = 0;\n        fflag = 1;\n      }\n\n      vm.dataModel.answers[0] = {\n        value: 'true',\n        is_correct: tflag\n      };\n      vm.dataModel.answers[1] = {\n        value: 'false',\n        is_correct: fflag\n      };\n    },\n    findQuestionBank: function findQuestionBank() {\n      var vm = this;\n      var id = vm.findModelId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_QUESTION + \"/\".concat(id)).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            console.log(response.data.question);\n            vm.dataModel = response.data.question;\n\n            if (response.data.question.type == 'true_false') {\n              var answers = response.data.question.answers;\n              var current = '';\n              answers = _.each(answers, function (item, key) {\n                if (item.is_correct == '1') return current = item.value;\n              });\n              console.log(answers);\n              vm.dataModel.true_false = current;\n            }\n\n            vm.selectedSubjects = response.data.question.subject;\n            vm.selectedStage = response.data.question.stage;\n            return;\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    findTeacher: function findTeacher() {\n      var vm = this;\n      var id = vm.findId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_TEACHERS + \"/\".concat(id)).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.teacher = response.data.teacher;\n            vm.subjects = response.data.teacher.subjects;\n            return;\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getAllSubjects: function getAllSubjects() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_SUBJECTS).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n          console.log(response);\n\n          if (response.status) {\n            vm.subjects = response.data.subjects.data;\n            return;\n          }\n\n          vm.subjects = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.subjects = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    editQuestion: function editQuestion() {\n      var vm = this;\n      vm.openLoadingContained();\n      var request_data = vm.dataModel;\n      request_data.stage_id = vm.selectedStage ? vm.selectedStage.id : '';\n      request_data.subject_id = vm.selectedSubjects ? vm.selectedSubjects.id : '';\n      $('.span-text-validation').text('');\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.EDIT_QUESTION, request_data).then(function (response) {\n          response = response.data;\n\n          if (response.status) {\n            window.helper.showMessage('success', vm);\n            vm.$router.push({\n              name: 'questions_bank'\n            });\n            return null;\n          }\n\n          vm.closeLoadingContained();\n        }).catch(function (error) {\n          vm.closeLoadingContained();\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openLoadingContained: function openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n    },\n    closeLoadingContained: function closeLoadingContained() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.loading = false;\n\n        _this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      }, 100);\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('edit_questions_bank')}}</span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('stages')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <multiselect v-model=\"selectedStage\" :options=\"stages\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           open-direction=\"bottom\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customStageLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"stage_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('subjects')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <multiselect v-model=\"selectedSubjects\" :options=\"subjects\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"subject_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('question_type')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-select class=\"w-full\" v-model=\"dataModel.type\" :disabled=\"true\"\r\n                         @change=\"changeQuestionType()\">\r\n                <vs-select-item value=\"mcq\" :text=\"$ml.get('mcq')\"></vs-select-item>\r\n                <vs-select-item value=\"true_false\" :text=\"$ml.get('true_false')\"></vs-select-item>\r\n                <vs-select-item value=\"text\" :text=\"$ml.get('_text')\"></vs-select-item>\r\n              </vs-select>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"type_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('question_degree')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-input class=\"w-full\" v-model=\"dataModel.degree\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"degree_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col w-full mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('question')}}\r\n                <span class=\"star\">*</span>\r\n              </label>\r\n              <vs-textarea v-model=\"dataModel.name\" rows=\"5\"></vs-textarea>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"name_error\"></span>\r\n            </div>\r\n          </div>\r\n\r\n          <span class=\"span-text-validation text-danger text-bold\" id=\"answers_error\"></span>\r\n          <div class=\"vx-row\" v-if=\"dataModel.type == 'mcq'\">\r\n            <div class=\"vx-col w-full mb-base\">\r\n              <div class=\"vx-col w-full mb-base\">\r\n                <vs-button color=\"primary\" class=\"text-bold\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-plus\"\r\n                           @click=\"dataModel.answers.push({value: '',is_correct:0})\">\r\n                  {{$ml.get('add_answers')}}\r\n                </vs-button>\r\n                <br>\r\n              </div>\r\n              <div class=\"vx-col w-full mb-base\">\r\n                <div class=\"vx-row\">\r\n                  <div class=\"vx-col md:w-1/4 mb-base\" style=\"position: relative\"\r\n                       v-for=\"(answer,key) in dataModel.answers\"\r\n                       :key=\"key\">\r\n                    <label class=\"vs-input--label\">\r\n                      <input type=\"checkbox\" value=\"1\" v-model=\"dataModel.answers[key].is_correct\">\r\n                      {{$ml.get('answer')}}<span class=\"star\">*</span>\r\n                    </label>\r\n                    <vs-input class=\"w-full\" v-model=\"dataModel.answers[key].value\"></vs-input>\r\n                    <vs-button color=\"danger\" type=\"filled\" icon=\"delete\" @click=\"deleteRow(key)\"\r\n                               style=\"position: absolute;left: 0;top:22px;\"></vs-button>\r\n                    <span class=\"span-text-validation text-danger text-bold\" :id=\"`answers.${key}.value_error`\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row\" v-if=\"dataModel.type == 'true_false'\">\r\n            <div class=\"vx-col md:w-1/4 mb-base\">\r\n              <vs-select class=\"w-full\" :label=\"$ml.get('answer')\" v-model=\"dataModel.true_false\"\r\n                         @change=\"changeQuestionTruefalse()\">\r\n                <vs-select-item value=\"true\" :text=\"$ml.get('true')\"></vs-select-item>\r\n                <vs-select-item value=\"false\" :text=\"$ml.get('false')\"></vs-select-item>\r\n              </vs-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"vx-row\" v-if=\"dataModel.type == 'text'\">\r\n            <div class=\"vx-col w-full mb-base\" v-if=\"dataModel.answers[0]\">\r\n              <input type=\"hidden\" v-model=\"dataModel.answers[0].is_correct\" value=\"1\">\r\n              <vs-textarea v-model=\"dataModel.answers[0].value\" :label=\"$ml.get('answer')\" rows=\"5\"></vs-textarea>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"editQuestion\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('edit')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {\r\n          type: 'mcq',\r\n          answers: []\r\n        },\r\n        teacher: {},\r\n        q_types: ['mcq', 'true_false', 'text'],\r\n        subjects: [],\r\n        selectedSubjects: null,\r\n        stages: [],\r\n        selectedStage: null,\r\n        findId: null,\r\n        findModelId: null,\r\n        loading: false\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n      this.findModelId = this.$route.params.id;\r\n      this.findId = auth_data.user.id;\r\n      this.findTeacher()\r\n      this.getAllStages()\r\n      // this.getAllSubjects()\r\n      this.findQuestionBank()\r\n    },\r\n    methods: {\r\n      deleteRow(key) {\r\n        let vm = this;\r\n        vm.dataModel.answers.splice(key, 1)\r\n      },\r\n      customLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      customStageLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      getAllStages() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.stages = response.data.stages.data;\r\n                // vm.classRooms = vm.stages.length > 0 ? vm.stages[0].class_rooms : [];\r\n                return\r\n              }\r\n              vm.stages = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.stages = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      changeQuestionType() {\r\n        // this.dataModel.answers = []\r\n        console.log(this.dataModel.type)\r\n        // if (this.dataModel.type == 'text') {\r\n        //   this.dataModel.answers = [{\r\n        //     value: '',\r\n        //     is_correct: 1\r\n        //   }];\r\n        // }\r\n      },\r\n      changeQuestionTruefalse() {\r\n        let vm = this;\r\n        let tflag = 0;\r\n        let fflag = 0;\r\n        if (vm.dataModel.true_false == 'true') {\r\n          tflag = 1;\r\n          fflag = 0;\r\n        } else {\r\n          tflag = 0;\r\n          fflag = 1;\r\n        }\r\n        vm.dataModel.answers[0] = {\r\n          value: 'true',\r\n          is_correct: tflag\r\n        }\r\n        vm.dataModel.answers[1] = {\r\n          value: 'false',\r\n          is_correct: fflag\r\n        }\r\n      },\r\n      findQuestionBank() {\r\n\r\n        let vm = this;\r\n        let id = vm.findModelId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_QUESTION + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                console.log(response.data.question)\r\n                vm.dataModel = response.data.question\r\n                if (response.data.question.type == 'true_false') {\r\n                  let answers = response.data.question.answers;\r\n                  let current = '';\r\n                  answers = _.each(answers, (item, key) => {\r\n                    if (item.is_correct == '1') return current = item.value\r\n                  })\r\n                  console.log(answers)\r\n                  vm.dataModel.true_false = current\r\n                }\r\n\r\n                vm.selectedSubjects = response.data.question.subject\r\n                vm.selectedStage = response.data.question.stage\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      findTeacher() {\r\n\r\n        let vm = this;\r\n        let id = vm.findId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_TEACHERS + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.teacher = response.data.teacher\r\n                vm.subjects = response.data.teacher.subjects\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllSubjects() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_SUBJECTS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.subjects = response.data.subjects.data;\r\n                return\r\n              }\r\n              vm.subjects = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.subjects = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      editQuestion() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        request_data.stage_id = vm.selectedStage ? vm.selectedStage.id : '';\r\n        request_data.subject_id = vm.selectedSubjects ? vm.selectedSubjects.id : '';\r\n\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.EDIT_QUESTION, request_data)\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'questions_bank'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"],"sourceRoot":"src/views/QuestionsBank/Edit"}]}