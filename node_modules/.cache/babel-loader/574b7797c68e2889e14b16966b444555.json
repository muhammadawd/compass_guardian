{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Meals/Categories/All/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Meals/Categories/All/Index.vue","mtime":1577871497156},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      knowledgeBaseSearchQuery: '',\n      categories: [],\n      id_to_delete: null\n    };\n  },\n  computed: {\n    filteredKB: function filteredKB() {\n      var _this = this;\n\n      return _.filter(this.categories, function (item) {\n        return item.translated.title.toLowerCase().includes(_this.knowledgeBaseSearchQuery.toLowerCase());\n      });\n    }\n  },\n  mounted: function mounted() {\n    var vm = this;\n    vm.getAllCategories();\n  },\n  methods: {\n    getAllCategories: function getAllCategories() {\n      // ALL_CATEGORIES\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_CATEGORIES).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.categories = response.data.categories.data;\n            console.log(vm.categories);\n            return;\n          }\n\n          vm.categories = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.categories = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openConfirm: function openConfirm(id) {\n      this.id_to_delete = id;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        accept: this.acceptAlert\n      });\n    },\n    acceptAlert: function acceptAlert() {\n      var vm = this;\n      var id = vm.id_to_delete;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_CATEGORIES + \"/\".concat(id)).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            $(\"#row_\".concat(id)).remove();\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: KnowledgeBase.vue\r\n    Description: Knowledge Base Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col md:w-1/2 mb-2\">\r\n        <vs-button color=\"primary\" class=\"text-bold\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-plus\"\r\n                   @click=\"$router.push({name: 'meals_categories_add'})\">\r\n          {{$ml.get('add_new')}}\r\n        </vs-button>\r\n      </div>\r\n    </div>\r\n    <!-- JUMBOTRON -->\r\n    <div class=\"knowledge-base-jumbotron\">\r\n      <div class=\"knowledge-base-jumbotron-content lg:p-15 md:p-12 sm:p-16 py-4 rounded-lg mb-base\">\r\n        <h1 class=\"mb-1 text-white\">{{$ml.get('search')}}</h1>\r\n        <p class=\"text-white lead\">{{$ml.get('about_categories')}}</p>\r\n        <vs-input :placeholder=\"$ml.get('search_word')\" v-model=\"knowledgeBaseSearchQuery\" icon-pack=\"feather\"\r\n                  icon=\"icon-search\" size=\"large\" class=\"w-full no-icon-border mt-6\"/>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/4 sm:w-1/2 mb-base \" v-for=\"item in filteredKB\" :key=\"item.id\"\r\n           :id=\"`row_${item.id}`\">\r\n        <vx-card class=\"text-center\">\r\n          <div class=\"vs-dialog\" style=\"background: #fff\">\r\n            <vs-button style=\"position: absolute;left: -10px;top: -10px;\" color=\"danger\" type=\"filled\"\r\n                       @click=\"openConfirm(item.id)\"\r\n                       icon-pack=\"feather\" icon=\"icon-x\"></vs-button>\r\n          </div>\r\n          <div class=\"cursor-pointer\" @click=\"$router.push({name:'meals_categories_edit',params:{id:item.id}})\">\r\n            <img :src=\"item.image_path\" alt=\"graphic\" width=\"100%\"\r\n                 class=\"mx-auto mb-4\">\r\n            <h2 class=\"mb-2 text-bold\">{{ item.translated.title.toUpperCase() }}</h2>\r\n            <small class=\"hidden\">{{ item.translated.description }}</small>\r\n          </div>\r\n          <!--          <img :src=\"require(`@/assets/images/pages/categories/${item.graphic}`)\" alt=\"graphic\" width=\"100%\"-->\r\n          <!--               class=\"mx-auto mb-4\">-->\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        knowledgeBaseSearchQuery: '',\r\n        categories: [],\r\n        id_to_delete: null,\r\n      }\r\n    },\r\n    computed: {\r\n      filteredKB() {\r\n        return _.filter(this.categories, (item) => {\r\n          return item.translated.title.toLowerCase().includes(this.knowledgeBaseSearchQuery.toLowerCase())\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      let vm = this;\r\n      vm.getAllCategories();\r\n    },\r\n    methods: {\r\n      getAllCategories() {\r\n        // ALL_CATEGORIES\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_CATEGORIES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.categories = response.data.categories.data;\r\n                console.log(vm.categories)\r\n                return\r\n              }\r\n              vm.categories = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.categories = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openConfirm(id) {\r\n        this.id_to_delete = id;\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          accept: this.acceptAlert\r\n        })\r\n      },\r\n      acceptAlert() {\r\n\r\n        let vm = this;\r\n        let id = vm.id_to_delete;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_CATEGORIES + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                $(`#row_${id}`).remove()\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .vx-card .vx-card__collapsible-content .vx-card__body {\r\n    padding: 0;\r\n  }\r\n\r\n  .knowledge-base-jumbotron-content {\r\n    background-image: url('../../../../assets/images/pages/data/1.jpg');\r\n    background-size: cover;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/Meals/Categories/All"}]}