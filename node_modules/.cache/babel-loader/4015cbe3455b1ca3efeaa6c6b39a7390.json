{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/AllExamsNatega/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Students/AllExamsNatega/Index.vue","mtime":1580995572919},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      mL: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      monthlyGrouped: [],\n      selected: [],\n      itemsPerPage: 5,\n      isMounted: false\n    };\n  },\n  mounted: function mounted() {\n    this.isMounted = true;\n    this.getAllExams();\n  },\n  computed: {\n    currentPage: function currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n\n      return 0;\n    }\n  },\n  methods: {\n    getAllExams: function getAllExams() {\n      var vm = this; // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.GET_STUDENT_EXAM_HOME_DATA, {\n          params: {\n            is_corrected: 'true' // teacher_id: auth_data.user.id\n\n          }\n        }).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n          console.log(response);\n\n          if (response.status) {\n            vm.monthlyGrouped = response.data.monthlyGrouped;\n            return;\n          }\n\n          vm.monthlyGrouped = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.monthlyGrouped = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    // getAllExams() {\n    //   let vm = this;\n    //   // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n    //   vm.$root.$children[0].$refs.loader.show_loader = true;\n    //   try {\n    //     window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_EXAM_NATEGA, {\n    //       params: {\n    //         is_corrected: 'true'\n    //         // teacher_id: auth_data.user.id\n    //       }\n    //     })\n    //       .then((response) => {\n    //         vm.$root.$children[0].$refs.loader.show_loader = false;\n    //         response = response.data;\n    //         console.log(response)\n    //         if (response.status) {\n    //           vm.exams = response.data.studentExams.data;\n    //           return\n    //         }\n    //         vm.exams = [];\n    //       }).catch((error) => {\n    //       vm.$root.$children[0].$refs.loader.show_loader = false;\n    //       window.helper.handleError(error, vm);\n    //       vm.exams = [];\n    //     });\n    //   } catch (e) {\n    //     console.log(e)\n    //   }\n    // },\n    deleteSelected: function deleteSelected() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: this.acceptAlert\n      });\n    },\n    acceptAlert: function acceptAlert() {\n      var vm = this;\n      var ids = vm.selected;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      ids = _.map(ids, 'id');\n      console.log(ids);\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\n          ids: ids\n        }).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.exams = window.helper.deleteMulti(ids, vm.exams);\n            location.reload();\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    deleteSingle: function deleteSingle(id) {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: function accept() {\n          try {\n            window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\n              ids: [id]\n            }).then(function (response) {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n\n              if (response.status) {\n                vm.exams = window.helper.deleteMulti([id], vm.exams);\n                location.reload();\n              }\n            }).catch(function (error) {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              window.helper.handleError(error, vm);\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"data-list-thumb-view\" class=\"data-list-container\">\r\n\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <vx-card class=\"text-right mb-base\" v-for=\"(exams , key) in monthlyGrouped\" :key=\"key\">\r\n          <div class=\"text-right\">\r\n            <div class=\"vx-row\">\r\n              <vs-alert class=\"mb-4\" color=\"danger\" style=\"background: rgb(244, 244, 244);\">\r\n                <h3 class=\"text-bold text-uppercase\">{{mL[key-1]}}</h3>\r\n              </vs-alert>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n              <vx-card class=\"vx-col md:w-1/4 mb-base\" v-for=\"(exam , key) in exams\" :key=\"key\"\r\n                       style=\"background: #eee\">\r\n                <h2 class=\"text-bold\">\r\n                  <span class=\"text-info\" style=\"font-size: 18px\">{{exam.exam.name}}</span>\r\n                </h2>\r\n                <div class=\"vx-card bg-primary-gradient p-0 m-0 text-center\" style=\"width: 100%\"><!---->\r\n                  <div class=\"vx-card__collapsible-content vs-con-loading__container\">\r\n                    <div class=\"vx-card__body m-0\">\r\n                      <h4 class=\"text-bold\">\r\n                        {{$ml.get('your_result')}}\r\n                        {{exam.exam.subject.translated.title}}\r\n                      </h4>\r\n                      <div class=\"vx-row text-center \" style=\"background: #fff\">\r\n                        <div class=\"vx-col w-full text-center\" dir=\"ltr\">\r\n                          <h1 class=\"text-bold mt-3\">{{parseFloat(exam.exam.degree).toFixed(2)}} /\r\n                            {{parseFloat(exam ? exam.degree : 0\r\n                            ).toFixed(2)}}</h1>\r\n                          <vs-button type=\"gradient\" color=\"primary\" label=\"remove_red_eye\" class=\"mb-2\"\r\n                                     @click=\"$router.push({name:'student_exam_result',params:{'id':exam.id}})\">\r\n                            {{$ml.get('show')}}\r\n                          </vs-button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </vx-card>\r\n              <div class=\"vx-col w-full\">\r\n                <vs-divider/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--          <div class=\"vx-row\">-->\r\n          <!--            <div class=\"vx-col w-full mb-base\" v-if=\"dataModel.textQuestions.length  > 0\">-->\r\n          <!--              <vs-row vs-justify=\"center\" class=\"w-full\">-->\r\n          <!--                <vs-col type=\"flex\" vs-justify=\"centesr\" vs-align=\"center\">-->\r\n          <!--                  <vs-card>-->\r\n          <!--                    <div slot=\"header\">-->\r\n          <!--                      <vs-alert active=\"true\" color=\"danger\">-->\r\n          <!--                        <h3 class=\"text-bold pb-4\">-->\r\n          <!--                          <span class=\"text-info\" style=\"font-size: 18px\">{{dataModel.exam.name}}</span> <br>-->\r\n          <!--                          <hr class=\"mb-4\">-->\r\n          <!--                          {{$ml.get('result_soon')}}-->\r\n          <!--                        </h3>-->\r\n          <!--                      </vs-alert>-->\r\n          <!--                    </div>-->\r\n          <!--                  </vs-card>-->\r\n          <!--                </vs-col>-->\r\n          <!--              </vs-row>-->\r\n          <!--            </div>-->\r\n          <!--          </div>-->\r\n          <!--                    <div class=\"vx-row\" v-if=\"dataModel\">-->\r\n          <!--                      <div class=\"vx-col w-full mb-base\" v-if=\"dataModel.textQuestions.length  == 0\">-->\r\n          <!--                        <h2 class=\"text-bold\">-->\r\n          <!--                          {{$ml.get('your_result_p')}} <br>-->\r\n          <!--                          <span class=\"text-info\" style=\"font-size: 18px\">{{dataModel.exam.name}}</span>-->\r\n          <!--                        </h2>-->\r\n          <!--                        <div class=\"vx-card bg-primary-gradient p-0 m-0 text-center\" style=\"width: 250px\">&lt;!&ndash;&ndash;&gt;-->\r\n          <!--                          <div class=\"vx-card__collapsible-content vs-con-loading__container\">-->\r\n          <!--                            <div class=\"vx-card__body m-0\">-->\r\n          <!--                              <h3 class=\"text-bold\">-->\r\n          <!--                                {{$ml.get('your_result')}}-->\r\n          <!--                              </h3>-->\r\n          <!--                              <div class=\"vx-row text-center \" style=\"background: #fff\">-->\r\n          <!--                                <div class=\"vx-col w-full text-center\" dir=\"ltr\">-->\r\n          <!--                                  <h1 class=\"text-bold mt-3\">{{parseFloat(dataModel.degree).toFixed(2)}} /-->\r\n          <!--                                    {{parseFloat(dataModel.exam ? dataModel.exam.degree : 0-->\r\n          <!--                                    ).toFixed(2)}}</h1>-->\r\n          <!--                                </div>-->\r\n          <!--                              </div>-->\r\n          <!--                            </div>-->\r\n          <!--                          </div>-->\r\n          <!--                        </div>-->\r\n          <!--                      </div>-->\r\n          <!--                    </div>-->\r\n\r\n\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        mL: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n        monthlyGrouped: [],\r\n        selected: [],\r\n        itemsPerPage: 5,\r\n        isMounted: false,\r\n      }\r\n    },\r\n    mounted() {\r\n      this.isMounted = true;\r\n      this.getAllExams()\r\n    },\r\n    computed: {\r\n      currentPage() {\r\n        if (this.isMounted) {\r\n          return this.$refs.table.currentx\r\n        }\r\n        return 0\r\n      },\r\n    },\r\n    methods: {\r\n      getAllExams() {\r\n        let vm = this;\r\n        // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.GET_STUDENT_EXAM_HOME_DATA, {\r\n            params: {\r\n              is_corrected: 'true'\r\n              // teacher_id: auth_data.user.id\r\n            }\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.monthlyGrouped = response.data.monthlyGrouped;\r\n                return\r\n              }\r\n              vm.monthlyGrouped = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.monthlyGrouped = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      // getAllExams() {\r\n      //   let vm = this;\r\n      //   // let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n      //   vm.$root.$children[0].$refs.loader.show_loader = true;\r\n      //   try {\r\n      //     window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_EXAM_NATEGA, {\r\n      //       params: {\r\n      //         is_corrected: 'true'\r\n      //         // teacher_id: auth_data.user.id\r\n      //       }\r\n      //     })\r\n      //       .then((response) => {\r\n      //         vm.$root.$children[0].$refs.loader.show_loader = false;\r\n      //         response = response.data;\r\n      //         console.log(response)\r\n      //         if (response.status) {\r\n      //           vm.exams = response.data.studentExams.data;\r\n      //           return\r\n      //         }\r\n      //         vm.exams = [];\r\n      //       }).catch((error) => {\r\n      //       vm.$root.$children[0].$refs.loader.show_loader = false;\r\n      //       window.helper.handleError(error, vm);\r\n      //       vm.exams = [];\r\n      //     });\r\n      //   } catch (e) {\r\n      //     console.log(e)\r\n      //   }\r\n      // },\r\n      deleteSelected() {\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: this.acceptAlert\r\n        })\r\n      },\r\n      acceptAlert() {\r\n        let vm = this;\r\n        let ids = vm.selected;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        ids = _.map(ids, 'id');\r\n        console.log(ids)\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\r\n            ids: ids\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.exams = window.helper.deleteMulti(ids, vm.exams)\r\n                location.reload()\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      deleteSingle(id) {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: this.$ml.get('confirm'),\r\n          text: this.$ml.get('are_sure'),\r\n          acceptText: this.$ml.get('yes'),\r\n          cancelText: this.$ml.get('no'),\r\n          accept: () => {\r\n            try {\r\n              window.serviceAPI.API().post(window.serviceAPI.DELETE_EXAM, {\r\n                ids: [id]\r\n              })\r\n                .then((response) => {\r\n                  vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                  response = response.data;\r\n                  if (response.status) {\r\n                    vm.exams = window.helper.deleteMulti([id], vm.exams)\r\n                    location.reload()\r\n                  }\r\n                }).catch((error) => {\r\n                vm.$root.$children[0].$refs.loader.show_loader = false;\r\n                window.helper.handleError(error, vm);\r\n              });\r\n            } catch (e) {\r\n              console.log(e)\r\n            }\r\n          }\r\n        })\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  #data-list-thumb-view {\r\n    .vs-con-table {\r\n\r\n      .vs-table--header {\r\n        display: flex;\r\n        flex-wrap: wrap-reverse;\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        > span {\r\n          display: flex;\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .vs-table--search {\r\n          padding-top: 0;\r\n\r\n          .vs-table--search-input {\r\n            padding: 0.9rem 2.5rem;\r\n            font-size: 1rem;\r\n\r\n            & + i {\r\n              left: 1rem;\r\n            }\r\n\r\n            &:focus + i {\r\n              left: 1rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table {\r\n        border-collapse: separate;\r\n        border-spacing: 0 1.3rem;\r\n        padding: 0 1rem;\r\n\r\n\r\n        tr {\r\n          box-shadow: 0 4px 20px 0 rgba(0, 0, 0, .05);\r\n\r\n          td {\r\n            padding: 10px;\r\n\r\n            &:first-child {\r\n              border-top-left-radius: .5rem;\r\n              border-bottom-left-radius: .5rem;\r\n            }\r\n\r\n            &:last-child {\r\n              border-top-right-radius: .5rem;\r\n              border-bottom-right-radius: .5rem;\r\n            }\r\n\r\n            &.img-container {\r\n              // width: 1rem;\r\n              // background: #fff;\r\n\r\n              span {\r\n                display: flex;\r\n                justify-content: center;\r\n              }\r\n\r\n              .product-img {\r\n                height: 110px;\r\n              }\r\n            }\r\n          }\r\n\r\n          td.td-check {\r\n            padding: 20px !important;\r\n          }\r\n        }\r\n      }\r\n\r\n      .vs-table--thead {\r\n        th {\r\n          padding-top: 0;\r\n          padding-bottom: 0;\r\n\r\n          .vs-table-text {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n          }\r\n        }\r\n\r\n        th.td-check {\r\n          padding: 0 15px !important;\r\n        }\r\n\r\n        tr {\r\n          background: none;\r\n          box-shadow: none;\r\n        }\r\n      }\r\n\r\n      .vs-table--pagination {\r\n        justify-content: center;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/Students/AllExamsNatega"}]}