{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/Reports/StudentLeavesReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/Reports/StudentLeavesReport.vue","mtime":1581339440355},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nexport default {\n  components: {\n    flatPickr: flatPickr\n  },\n  data: function data() {\n    return {\n      status: [],\n      student_leaves: [],\n      selected: [],\n      itemsPerPage: 5,\n      isMounted: false,\n      filterModel: {}\n    };\n  },\n  mounted: function mounted() {\n    this.isMounted = true;\n    this.getAllStatus();\n    this.getAllStudnetLeaves();\n  },\n  computed: {\n    currentPage: function currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n\n      return 0;\n    }\n  },\n  methods: {\n    hasAccessPermission: function hasAccessPermission(permission) {\n      return window.helper.hasAccessPermission(permission);\n    },\n    getAllStatus: function getAllStatus() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n          console.log(response);\n\n          if (response.status) {\n            vm.status = response.data.status.teacher_leave;\n            return;\n          }\n\n          vm.status = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.status = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getStatusClass: function getStatusClass(status) {\n      if (status == 'accepted') {\n        return 'vs-chip-success';\n      } else if (status == 'rejected') {\n        return 'vs-chip-danger';\n      } else {\n        return 'vs-chip-warning';\n      }\n    },\n    getAllStudnetLeaves: function getAllStudnetLeaves() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_LEAVES).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.student_leaves = response.data.studentLeaves.data;\n\n            _.transform(response.data.studentLeaves.data, function (result, value, key) {\n              // console.log(result, value, key);\n              value.teacher_name = value.teacher ? value.teacher.name : '';\n              value.student_name = value.student_term ? value.student_term.student.name : '';\n              result[key] = value;\n            }, {});\n\n            return;\n          }\n\n          vm.student_leaves = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.student_leaves = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    deleteSelected: function deleteSelected() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: this.acceptAlert\n      });\n    },\n    acceptAlert: function acceptAlert() {\n      var vm = this;\n      var ids = vm.selected;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n      ids = _.map(ids, 'id');\n      console.log(ids);\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n          ids: ids\n        }).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.student_leaves = window.helper.deleteMulti(ids, vm.student_leaves);\n            location.reload();\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    deleteSingle: function deleteSingle(id) {\n      var vm = this;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: this.$ml.get('confirm'),\n        text: this.$ml.get('are_sure'),\n        acceptText: this.$ml.get('yes'),\n        cancelText: this.$ml.get('no'),\n        accept: function accept() {\n          vm.$root.$children[0].$refs.loader.show_loader = true;\n\n          try {\n            window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n              ids: [id]\n            }).then(function (response) {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n\n              if (response.status) {\n                vm.student_leaves = window.helper.deleteMulti([id], vm.student_leaves);\n                location.reload();\n              }\n            }).catch(function (error) {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              window.helper.handleError(error, vm);\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["StudentLeavesReport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"vx-row\">\n      <div class=\"vx-col w-full\">\n        <div class=\"vx-row  text-right\">\n          <div class=\"vx-col w-full mb-base btn-group d-print-none\" dir=\"ltr\">\n<!--            <vs-button @click=\"getAllStudnetLeaves()\">-->\n<!--              <i class=\"fa fa-search\"></i>-->\n<!--            </vs-button>-->\n            <vs-button color=\"warning\" onclick=\"window.print()\">\n              <i class=\"fa fa-print\"></i>\n            </vs-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"container-fluid mt--7\">\n      <div class=\"row \">\n        <div class=\"col\">\n          <div class=\"card shadow border-0\">\n            <div class=\"map-canvas\"\n                 style=\"min-height: 600px;\">\n              <div class=\"table-responsive\">\n                <vs-table stripe :data=\"student_leaves\">\n                  <template slot=\"header\">\n                    <h3>\n\n                    </h3>\n                  </template>\n                  <template slot=\"thead\">\n                    <vs-th width=\"220px\">\n                      {{$ml.get('students')}}\n                    </vs-th>\n                    <vs-th>{{$ml.get('teachers')}}</vs-th>\n                    <vs-th>{{$ml.get('type')}}</vs-th>\n                    <vs-th>{{$ml.get('date')}}</vs-th>\n                    <vs-th>{{$ml.get('notes')}}</vs-th>\n                  </template>\n\n                  <template slot-scope=\"{data}\">\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\n                      <vs-td class=\"text-right\">\n                        <slot v-if=\"tr.student_term\">\n                          {{tr.student_term.student.name}}\n                        </slot>\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        <slot v-if=\"tr.teacher\">\n                          {{tr.teacher.name}}\n                        </slot>\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        <div class=\"con-vs-chip ml-auto  con-color\"\n                             :class=\"tr.type == 'vacation' ? 'vs-chip-success':'vs-chip-danger'\"\n                             style=\"color: rgba(255, 255, 255, 0.9);\">\n                          <span class=\"text-chip vs-chip--text\">{{$ml.get(tr.type)}}</span>\n                        </div>\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        {{tr.date}}\n                      </vs-td>\n                      <vs-td class=\"text-right\">\n                        {{tr.notes}}\n                      </vs-td>\n                    </vs-tr>\n                  </template>\n                </vs-table>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  import flatPickr from 'vue-flatpickr-component';\n  import 'flatpickr/dist/flatpickr.css';\n\n  export default {\n    components: {\n      flatPickr\n    },\n    data() {\n      return {\n        status: [],\n        student_leaves: [],\n        selected: [],\n        itemsPerPage: 5,\n        isMounted: false,\n        filterModel: {}\n      }\n    },\n    mounted() {\n      this.isMounted = true;\n      this.getAllStatus()\n      this.getAllStudnetLeaves()\n    },\n    computed: {\n      currentPage() {\n        if (this.isMounted) {\n          return this.$refs.table.currentx\n        }\n        return 0\n      },\n    },\n    methods: {\n      hasAccessPermission(permission) {\n        return window.helper.hasAccessPermission(permission);\n      },\n      getAllStatus() {\n        let vm = this;\n        vm.$root.$children[0].$refs.loader.show_loader = true;\n        try {\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS)\n            .then((response) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n              console.log(response)\n              if (response.status) {\n                vm.status = response.data.status.teacher_leave;\n                return\n              }\n              vm.status = [];\n            }).catch((error) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            window.helper.handleError(error, vm);\n            vm.status = [];\n          });\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      getStatusClass(status) {\n        if (status == 'accepted') {\n\n          return 'vs-chip-success';\n        } else if (status == 'rejected') {\n\n          return 'vs-chip-danger';\n        } else {\n\n          return 'vs-chip-warning';\n        }\n      },\n      getAllStudnetLeaves() {\n        let vm = this;\n        vm.$root.$children[0].$refs.loader.show_loader = true;\n        try {\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STUDENT_LEAVES)\n            .then((response) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n              if (response.status) {\n                vm.student_leaves = response.data.studentLeaves.data;\n                _.transform(response.data.studentLeaves.data, function (result, value, key) {\n                  // console.log(result, value, key);\n                  value.teacher_name = value.teacher ? value.teacher.name : '';\n                  value.student_name = value.student_term ? value.student_term.student.name : '';\n                  result[key] = value;\n                }, {});\n                return\n              }\n              vm.student_leaves = [];\n            }).catch((error) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            window.helper.handleError(error, vm);\n            vm.student_leaves = [];\n          });\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      deleteSelected() {\n        this.$vs.dialog({\n          type: 'confirm',\n          color: 'danger',\n          title: this.$ml.get('confirm'),\n          text: this.$ml.get('are_sure'),\n          acceptText: this.$ml.get('yes'),\n          cancelText: this.$ml.get('no'),\n          accept: this.acceptAlert\n        })\n      },\n      acceptAlert() {\n        let vm = this;\n        let ids = vm.selected;\n        vm.$root.$children[0].$refs.loader.show_loader = true;\n        ids = _.map(ids, 'id');\n        console.log(ids)\n        try {\n          window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n            ids: ids\n          })\n            .then((response) => {\n              vm.$root.$children[0].$refs.loader.show_loader = false;\n              response = response.data;\n              if (response.status) {\n                vm.student_leaves = window.helper.deleteMulti(ids, vm.student_leaves)\n                location.reload()\n              }\n            }).catch((error) => {\n            vm.$root.$children[0].$refs.loader.show_loader = false;\n            window.helper.handleError(error, vm);\n          });\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      deleteSingle(id) {\n        let vm = this;\n        this.$vs.dialog({\n          type: 'confirm',\n          color: 'danger',\n          title: this.$ml.get('confirm'),\n          text: this.$ml.get('are_sure'),\n          acceptText: this.$ml.get('yes'),\n          cancelText: this.$ml.get('no'),\n          accept: () => {\n            vm.$root.$children[0].$refs.loader.show_loader = true;\n            try {\n              window.serviceAPI.API().post(window.serviceAPI.DELETE_STUDENT_LEAVES, {\n                ids: [id]\n              })\n                .then((response) => {\n                  vm.$root.$children[0].$refs.loader.show_loader = false;\n                  response = response.data;\n                  if (response.status) {\n                    vm.student_leaves = window.helper.deleteMulti([id], vm.student_leaves)\n                    location.reload()\n                  }\n                }).catch((error) => {\n                vm.$root.$children[0].$refs.loader.show_loader = false;\n                window.helper.handleError(error, vm);\n              });\n            } catch (e) {\n              console.log(e)\n            }\n          }\n        })\n      },\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/Reports"}]}