{"remainingRequest":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muhammadawd/WebstormProjects/Guardian/src/views/TeacherExams/Edit/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muhammadawd/WebstormProjects/Guardian/src/views/TeacherExams/Edit/Index.vue","mtime":1580896155948},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muhammadawd/WebstormProjects/Guardian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport 'vue-multiselect/dist/vue-multiselect.min.css';\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nexport default {\n  components: {\n    Multiselect: Multiselect,\n    flatPickr: flatPickr\n  },\n  data: function data() {\n    return {\n      dataModel: {},\n      timeConfig: {\n        enableTime: true,\n        time_24hr: true\n      },\n      teacher: {},\n      q_types: ['mcq', 'true_false', 'text'],\n      subjects: [],\n      selectedSubjects: null,\n      status: [],\n      selected: [],\n      stages: [],\n      selectedStage: null,\n      classRooms: [],\n      selectedClassRooms: null,\n      findId: null,\n      findModelId: null,\n      questions: [],\n      loading: false\n    };\n  },\n  watch: {\n    selectedStage: function selectedStage(newStage, oldStage) {\n      if (oldStage != null) {\n        this.selectedClassRooms = null;\n        this.classRooms = newStage.class_rooms;\n      }\n    }\n  },\n  computed: {},\n  mounted: function mounted() {\n    var auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n    this.findId = auth_data.user.id;\n    this.findModelId = this.$route.params.id;\n    this.findExam();\n    this.findTeacher();\n    this.getAllStages();\n    this.getAllStatus();\n  },\n  methods: {\n    customLabel: function customLabel(_ref) {\n      var translated = _ref.translated;\n      return \"\".concat(translated.title);\n    },\n    customStageLabel: function customStageLabel(_ref2) {\n      var translated = _ref2.translated;\n      return \"\".concat(translated.title);\n    },\n    getAllStatus: function getAllStatus() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n          console.log(response);\n\n          if (response.status) {\n            vm.status = response.data.status.exam_status;\n            return;\n          }\n\n          vm.status = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.status = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getAllStages: function getAllStages() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.stages = response.data.stages.data; // vm.classRooms = vm.stages.length > 0 ? vm.stages[0].class_rooms : [];\n\n            return;\n          }\n\n          vm.stages = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.stages = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    changeQuestionType: function changeQuestionType() {\n      var vm = this;\n      console.log(vm.dataModel.question_type);\n    },\n    findTeacher: function findTeacher() {\n      var vm = this;\n      var id = vm.findId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_TEACHERS + \"/\".concat(id)).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.teacher = response.data.teacher;\n            vm.subjects = response.data.teacher.subjects;\n            return;\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    findExam: function findExam() {\n      var vm = this;\n      var id = vm.findModelId;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.FIND_EXAM + \"/\".concat(id)).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.dataModel = response.data.exam;\n            vm.selectedSubjects = response.data.exam.subject;\n            vm.selectedStage = response.data.exam.stage;\n            vm.classRooms = response.data.exam.stage.class_rooms;\n            vm.selectedClassRooms = response.data.exam.classrooms;\n            var selected_question = response.data.exam.questions;\n            vm.getQuestions(selected_question);\n            console.log(vm.selectedStage);\n            return;\n          }\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getAllSubjects: function getAllSubjects() {\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_SUBJECTS).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n          console.log(response);\n\n          if (response.status) {\n            vm.subjects = response.data.subjects.data;\n            return;\n          }\n\n          vm.subjects = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.subjects = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getAllQuestions: function getAllQuestions() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var selected_questions = arguments.length > 1 ? arguments[1] : undefined;\n      var vm = this;\n      vm.$root.$children[0].$refs.loader.show_loader = true;\n\n      try {\n        window.serviceAPI.API().get(window.serviceAPI.ALL_QUESTION, {\n          params: filters\n        }).then(function (response) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          response = response.data;\n\n          if (response.status) {\n            vm.questions = response.data.questions.data; // console.log(vm.questions)\n\n            var selected_ids = _.map(selected_questions, 'question_id');\n\n            _.each(vm.questions, function (o) {\n              if (selected_ids.includes(o.id)) {\n                vm.selected.push(o);\n              }\n            });\n\n            _.transform(vm.questions, function (result, value, key) {\n              value.question_id = value.id;\n\n              var r = _.find(selected_questions, ['question_id', value.id]); // console.log(r)\n\n\n              if (r) value.degree = r.degree;\n              result[key] = value;\n            }, {});\n\n            return;\n          }\n\n          vm.questions = [];\n        }).catch(function (error) {\n          vm.$root.$children[0].$refs.loader.show_loader = false;\n          window.helper.handleError(error, vm);\n          vm.questions = [];\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getQuestions: function getQuestions() {\n      var _this = this;\n\n      var selected_questions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      setTimeout(function () {\n        var stage_id = _this.selectedStage ? _this.selectedStage.id : '';\n        var auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n\n        _this.getAllQuestions({\n          stage_id: stage_id,\n          teacher_id: auth_data.user.id\n        }, selected_questions);\n      }, 100);\n    },\n    editExam: function editExam() {\n      var vm = this;\n      vm.openLoadingContained();\n      var request_data = vm.dataModel;\n      request_data.subject_id = vm.selectedSubjects ? vm.selectedSubjects.id : '';\n      request_data.stage_id = vm.selectedStage ? vm.selectedStage.id : '';\n      var auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\n      request_data.teacher_id = auth_data.user.id;\n      request_data.classroom_ids = vm.selectedClassRooms ? _.map(vm.selectedClassRooms, 'id') : [];\n      request_data.questions = vm.selected;\n      $('.span-text-validation').text('');\n\n      try {\n        window.serviceAPI.API().post(window.serviceAPI.EDIT_EXAM, request_data).then(function (response) {\n          response = response.data;\n\n          if (response.status) {\n            window.helper.showMessage('success', vm);\n            vm.$router.push({\n              name: 'teacher_exams'\n            });\n            return null;\n          }\n\n          vm.closeLoadingContained();\n        }).catch(function (error) {\n          vm.closeLoadingContained();\n          window.helper.handleError(error, vm);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openLoadingContained: function openLoadingContained() {\n      this.loading = true;\n      this.$vs.loading({\n        background: '#000',\n        color: '#fff',\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n    },\n    closeLoadingContained: function closeLoadingContained() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.loading = false;\n\n        _this2.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      }, 100);\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"knowledge-base-page\">\r\n    <!-- KNOWLEDGE BASE CARDS  -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full md:w-1/1 mb-base\">\r\n        <vx-card class=\"text-right\">\r\n          <vs-alert class=\"mb-4\" color=\"dark\">\r\n            <span class=\"text-bold\">{{$ml.get('edit_teacher_exams')}}</span>\r\n          </vs-alert>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('subjects')}}</label>\r\n              <multiselect v-model=\"selectedSubjects\" :options=\"subjects\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"subject_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('stages')}}</label>\r\n              <multiselect v-model=\"selectedStage\" :options=\"stages\" :multiple=\"false\" :close-on-select=\"true\"\r\n                           open-direction=\"bottom\" @select=\"getQuestions()\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customStageLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"stage_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/3 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('class_room')}}</label>\r\n              <multiselect v-model=\"selectedClassRooms\" :options=\"classRooms\" :multiple=\"true\"\r\n                           open-direction=\"bottom\"\r\n                           :close-on-select=\"true\"\r\n                           :clear-on-select=\"false\" :preserve-search=\"true\" :placeholder=\"$ml.get('search')\"\r\n                           :custom-label=\"customStageLabel\"\r\n                           track-by=\"id\" :preselect-first=\"true\">\r\n              </multiselect>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"classroom_id_error\"></span>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"classroom_ids_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('name')\" v-model=\"dataModel.name\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"name_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('exam_period')\" v-model=\"dataModel.duration\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"duration_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('date')}}</label>\r\n              <flat-pickr class=\"w-full\" :config=\"timeConfig\" :label=\"$ml.get('date')\"\r\n                          v-model=\"dataModel.date\"></flat-pickr>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"date_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <label class=\"vs-input--label\">{{$ml.get('status')}}</label>\r\n              <vs-select class=\"w-full\" v-model=\"dataModel.status_id\">\r\n                <vs-select-item v-for=\"(state,key) in status\" :value=\"state.id\" :key=\"key\"\r\n                                :text=\"state.translated.title\"></vs-select-item>\r\n              </vs-select>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"status_id_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('question_number')\" v-model=\"dataModel.question_number\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"question_number_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col md:w-1/6 mb-base\">\r\n              <vs-input class=\"w-full\" :label=\"$ml.get('degree')\" v-model=\"dataModel.degree\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"degree_error\"></span>\r\n            </div>\r\n            <div class=\"vx-col w-full mb-base\">\r\n              <vs-textarea class=\"w-full\" :label=\"$ml.get('notes')\" v-model=\"dataModel.notes\"/>\r\n              <span class=\"span-text-validation text-danger text-bold\" id=\"notes_error\"></span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-table ref=\"table\" multiple v-model=\"selected\" :data=\"questions\">\r\n\r\n                <template slot=\"thead\">\r\n                  <vs-th>{{$ml.get('question')}}</vs-th>\r\n                  <vs-th>{{$ml.get('type')}}</vs-th>\r\n                  <vs-th>{{$ml.get('question_degree')}}</vs-th>\r\n                  <vs-th></vs-th>\r\n                </template>\r\n\r\n                <template slot-scope=\"{data}\">\r\n                  <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td class=\"text-right\">\r\n                      {{tr.name}}\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      {{$ml.get(tr.type)}}\r\n                    </vs-td>\r\n                    <vs-td class=\"text-right\">\r\n                      <vs-input v-model=\"questions[indextr].degree\"/>\r\n                    </vs-td>\r\n                  </vs-tr>\r\n                </template>\r\n              </vs-table>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full text-center mb-base\">\r\n              <vs-button ref=\"loadableButton\" id=\"button-with-loading\" :disabled=\"loading\"\r\n                         class=\"vs-con-loading__container vs-button-dark text-bold\"\r\n                         @click=\"editExam\" type=\"filled\" vslor=\"primary\">\r\n                {{$ml.get('edit')}}\r\n              </vs-button>\r\n            </div>\r\n          </div>\r\n        </vx-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Multiselect from 'vue-multiselect'\r\n  import 'vue-multiselect/dist/vue-multiselect.min.css'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n\r\n  export default {\r\n    components: {\r\n      Multiselect, flatPickr\r\n    },\r\n    data() {\r\n      return {\r\n        dataModel: {},\r\n        timeConfig: {\r\n          enableTime: true,\r\n          time_24hr: true\r\n        },\r\n        teacher: {},\r\n        q_types: ['mcq', 'true_false', 'text'],\r\n        subjects: [],\r\n        selectedSubjects: null,\r\n        status: [],\r\n        selected: [],\r\n        stages: [],\r\n        selectedStage: null,\r\n        classRooms: [],\r\n        selectedClassRooms: null,\r\n        findId: null,\r\n        findModelId: null,\r\n        questions: [],\r\n        loading: false\r\n      }\r\n    }, watch: {\r\n      selectedStage: function (newStage, oldStage) {\r\n        if (oldStage != null) {\r\n          this.selectedClassRooms = null;\r\n          this.classRooms = newStage.class_rooms;\r\n        }\r\n      }\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n      let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n      this.findId = auth_data.user.id;\r\n      this.findModelId = this.$route.params.id;\r\n      this.findExam()\r\n      this.findTeacher()\r\n      this.getAllStages()\r\n      this.getAllStatus()\r\n    },\r\n    methods: {\r\n      customLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      customStageLabel({translated}) {\r\n        return `${translated.title}`\r\n      },\r\n      getAllStatus() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STATUS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.status = response.data.status.exam_status;\r\n                return\r\n              }\r\n              vm.status = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.status = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllStages() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_STAGES)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.stages = response.data.stages.data;\r\n                // vm.classRooms = vm.stages.length > 0 ? vm.stages[0].class_rooms : [];\r\n                return\r\n              }\r\n              vm.stages = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.stages = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      changeQuestionType() {\r\n        let vm = this;\r\n        console.log(vm.dataModel.question_type)\r\n      },\r\n      findTeacher() {\r\n\r\n        let vm = this;\r\n        let id = vm.findId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_TEACHERS + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.teacher = response.data.teacher\r\n                vm.subjects = response.data.teacher.subjects\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      findExam() {\r\n\r\n        let vm = this;\r\n        let id = vm.findModelId;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.FIND_EXAM + `/${id}`)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.dataModel = response.data.exam\r\n                vm.selectedSubjects = response.data.exam.subject\r\n                vm.selectedStage = response.data.exam.stage\r\n                vm.classRooms = response.data.exam.stage.class_rooms\r\n                vm.selectedClassRooms = response.data.exam.classrooms\r\n\r\n                let selected_question = response.data.exam.questions;\r\n                vm.getQuestions(selected_question)\r\n\r\n                console.log(vm.selectedStage)\r\n\r\n                return\r\n              }\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllSubjects() {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_SUBJECTS)\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              console.log(response)\r\n              if (response.status) {\r\n                vm.subjects = response.data.subjects.data;\r\n                return\r\n              }\r\n              vm.subjects = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.subjects = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getAllQuestions(filters = {}, selected_questions) {\r\n        let vm = this;\r\n        vm.$root.$children[0].$refs.loader.show_loader = true;\r\n        try {\r\n          window.serviceAPI.API().get(window.serviceAPI.ALL_QUESTION, {\r\n            params: filters\r\n          })\r\n            .then((response) => {\r\n              vm.$root.$children[0].$refs.loader.show_loader = false;\r\n              response = response.data;\r\n              if (response.status) {\r\n                vm.questions = response.data.questions.data;\r\n\r\n\r\n                // console.log(vm.questions)\r\n                let selected_ids = _.map(selected_questions, 'question_id');\r\n                _.each(vm.questions, function (o) {\r\n                  if (selected_ids.includes(o.id)) {\r\n                    vm.selected.push(o)\r\n                  }\r\n                });\r\n\r\n                _.transform(vm.questions, function (result, value, key) {\r\n                  value.question_id = value.id;\r\n                  let r = _.find(selected_questions, ['question_id', value.id]);\r\n                  // console.log(r)\r\n                  if (r) value.degree = r.degree\r\n\r\n                  result[key] = value;\r\n                }, {});\r\n\r\n\r\n                return\r\n              }\r\n              vm.questions = [];\r\n            }).catch((error) => {\r\n            vm.$root.$children[0].$refs.loader.show_loader = false;\r\n            window.helper.handleError(error, vm);\r\n            vm.questions = [];\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      getQuestions(selected_questions = []) {\r\n        setTimeout(() => {\r\n          let stage_id = this.selectedStage ? this.selectedStage.id : '';\r\n          let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n\r\n          this.getAllQuestions({\r\n            stage_id: stage_id,\r\n            teacher_id: auth_data.user.id\r\n          }, selected_questions)\r\n        }, 100)\r\n      },\r\n      editExam() {\r\n        const vm = this;\r\n        vm.openLoadingContained();\r\n        let request_data = vm.dataModel;\r\n        request_data.subject_id = vm.selectedSubjects ? vm.selectedSubjects.id : '';\r\n        request_data.stage_id = vm.selectedStage ? vm.selectedStage.id : '';\r\n        let auth_data = JSON.parse(window.ls.getFromStorage('auth_data'));\r\n        request_data.teacher_id = auth_data.user.id;\r\n        request_data.classroom_ids = vm.selectedClassRooms ? _.map(vm.selectedClassRooms, 'id') : [];\r\n        request_data.questions = vm.selected;\r\n\r\n        $('.span-text-validation').text('');\r\n        try {\r\n          window.serviceAPI.API().post(window.serviceAPI.EDIT_EXAM, request_data)\r\n            .then((response) => {\r\n              response = response.data;\r\n              if (response.status) {\r\n                window.helper.showMessage('success', vm);\r\n                vm.$router.push({name: 'teacher_exams'});\r\n                return null;\r\n              }\r\n              vm.closeLoadingContained()\r\n            }).catch((error) => {\r\n            vm.closeLoadingContained()\r\n            window.helper.handleError(error, vm);\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      },\r\n      openLoadingContained() {\r\n        this.loading = true;\r\n        this.$vs.loading({\r\n          background: '#000',\r\n          color: '#fff',\r\n          container: \"#button-with-loading\",\r\n          scale: 0.45\r\n        })\r\n      },\r\n      closeLoadingContained() {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n          this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n        }, 100);\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"],"sourceRoot":"src/views/TeacherExams/Edit"}]}